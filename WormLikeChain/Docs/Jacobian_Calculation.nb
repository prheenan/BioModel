(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    215877,       4193]
NotebookOptionsPosition[    212416,       4076]
NotebookOutlinePosition[    212798,       4093]
CellTagsIndexPosition[    212755,       4090]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Make", " ", "this", " ", "notebook", " ", "standalone"}], " ", 
   "*)"}], "\n", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"See", ":", " ", "http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"stackoverflow", ".", "com"}], "/", "questions"}], "/", 
       "4896011"}], "/", "mathematica"}], "-", "separating", "-", 
     "notebooks"}]}], " ", "*)"}], "\n", 
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", 
    RowBox[{"CellContext", " ", "->", " ", "Notebook"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.670294437154244*^9, 3.670294439968402*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Write", " ", "down", " ", "the", " ", "full", " ", "WLC", " ", "model", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "From", " ", 
    "\"\<Estimating the Persistence Length of a Worm-Like Chain Molecule \
...\>\"", "\n", 
    RowBox[{"C", ".", "Bouchiat"}]}], ",", 
   RowBox[{"M", ".", "D", ".", "Wang"}], ",", 
   RowBox[{"et", " ", 
    RowBox[{"al", ".", "Biophysical"}], " ", "Journal", " ", "Volume", " ", 
    "76"}], ",", 
   RowBox[{"Issue", " ", "1"}], ",", 
   RowBox[{"January", " ", "1999"}], ",", 
   RowBox[{
    RowBox[{"Pages", " ", "409"}], "-", 
    RowBox[{"413", "\n", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"web", ".", "mit", ".", "edu"}], "/", "cortiz"}], "/", 
        "www"}], "/", "3.052"}], "/", "3.052"}], 
     RowBox[{"CourseReader", "/", "38"}], 
     RowBox[{"_BouchiatBiophysicalJ1999", ".", "pdf"}]}]}]}], "\n", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.670294441440194*^9, 3.670294448857616*^9}, {
  3.6702944922528267`*^9, 3.67029449531588*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Force", " ", "=", " ", 
  RowBox[{
   SubscriptBox["k", "b"], "*", 
   RowBox[{"T", "/", 
    SubscriptBox["L", "p"]}], " ", "*", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"4", "*", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "l"}], ")"}], "^", "2"}]}], ")"}]}], " ", "-", 
     " ", 
     RowBox[{"1", "/", "4"}], " ", "+", " ", "l", " ", "+", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        SubscriptBox["a", "i"], "*", 
        RowBox[{"l", "^", 
         RowBox[{"(", "i", ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "2", ",", "n"}], "}"}]}], "]"}]}], 
    ")"}]}]}]], "Input",
 CellChangeTimes->{{3.670294566889379*^9, 3.670294614202404*^9}, {
   3.6702946599734364`*^9, 3.670294660139101*^9}, {3.670366245891136*^9, 
   3.670366246581622*^9}, 3.670451577483213*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"T", " ", 
   SubscriptBox["k", "b"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], "+", 
     FractionBox["1", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "l"}], ")"}], "2"]}]], "+", "l", "+", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "2"}], "n"], 
      RowBox[{
       SuperscriptBox["l", "i"], " ", 
       SubscriptBox["a", "i"]}]}]}], ")"}]}], 
  SubscriptBox["L", "p"]]], "Output",
 CellChangeTimes->{{3.670294606315073*^9, 3.67029461462199*^9}, 
   3.67029466048969*^9, 3.670294692812585*^9, {3.670294788627894*^9, 
   3.670294796744917*^9}, 3.670327032825286*^9, {3.670366237036463*^9, 
   3.670366247269271*^9}, 3.670378742739081*^9, 3.670464050182221*^9, {
   3.670502488474085*^9, 3.670502516879057*^9}, 3.670592436324864*^9, 
   3.670670785058444*^9, 3.670722103535798*^9, {3.670755434517922*^9, 
   3.670755449213621*^9}, 3.670755489444738*^9, 3.670942707844952*^9, 
   3.6709429297021103`*^9, {3.670943223818385*^9, 3.670943249091402*^9}, 
   3.67094939186408*^9, 3.676298353758265*^9, {3.676311718550062*^9, 
   3.676311733388672*^9}, 3.6763118467559958`*^9, {3.676312052659465*^9, 
   3.6763120640773077`*^9}, 3.6769227641513243`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ForceNoCoeffs", " ", "=", " ", 
  RowBox[{"Force", " ", "/.", " ", 
   RowBox[{
    SubscriptBox["a", "i"], "\[Rule]", " ", "0"}]}]}]], "Input",
 CellChangeTimes->{{3.676298355691288*^9, 3.676298371427595*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], "+", 
     FractionBox["1", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "l"}], ")"}], "2"]}]], "+", "l"}], ")"}], " ", "T",
    " ", 
   SubscriptBox["k", "b"]}], 
  SubscriptBox["L", "p"]]], "Output",
 CellChangeTimes->{
  3.67629837187002*^9, {3.676311718590159*^9, 3.676311733416492*^9}, 
   3.6763118467908373`*^9, {3.676312052709461*^9, 3.67631206411419*^9}, 
   3.676922764174529*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"evidentally", ",", " ", 
    RowBox[{"the", " ", "second", " ", "solution", " ", 
     RowBox[{"(", 
      RowBox[{"of", " ", "three"}], ")"}], " ", "converges", " ", "the", " ", 
     "best", " ", "for", " ", "our", " ", "regions", " ", "of", " ", 
     "interest"}]}], " ", "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.676312308738113*^9, 3.676312327157845*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"LReal", " ", "=", " ", 
   RowBox[{"l", " ", "/.", " ", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{"ForceNoCoeffs", " ", "\[Equal]", " ", "F"}], ",", "l"}], 
      "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676298374778833*^9, 3.676298418802532*^9}, {
   3.676311695465267*^9, 3.67631175172691*^9}, {3.6763118746874228`*^9, 
   3.676311874746966*^9}, {3.676312050749466*^9, 3.676312063627734*^9}, 
   3.676312307150647*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rules", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"l", " ", "\[Rule]", " ", 
    RowBox[{
     RowBox[{"x", "/", 
      SubscriptBox["L", "0"]}], "-", 
     RowBox[{"F", "/", 
      SubscriptBox["K", "0"]}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.670294667699361*^9, 3.670294696237104*^9}, 
   3.6704515775137053`*^9, {3.670502480026668*^9, 3.670502480700596*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"l", "\[Rule]", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["F", 
      SubscriptBox["K", "0"]]}], "+", 
    FractionBox["x", 
     SubscriptBox["L", "0"]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.670294684820223*^9, 3.670294696677682*^9}, {
   3.6702947886785707`*^9, 3.670294796774102*^9}, 3.670327032957965*^9, {
   3.670366237080418*^9, 3.6703662482866173`*^9}, 3.670378742770632*^9, 
   3.6704640502221212`*^9, {3.670502481248846*^9, 3.670502516916692*^9}, 
   3.670592436368929*^9, 3.6706707851018467`*^9, 3.670722103557357*^9, {
   3.670755434548539*^9, 3.670755449239581*^9}, 3.670755489485029*^9, 
   3.670942708016507*^9, 3.6709429297418337`*^9, {3.670943223842607*^9, 
   3.6709432491299257`*^9}, 3.67094939190138*^9, 3.676298353827518*^9, {
   3.676311718686653*^9, 3.676311733510098*^9}, 3.676311846959941*^9, {
   3.676312052995013*^9, 3.676312064380452*^9}, 3.676312339515427*^9, 
   3.676922764242907*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExtensionPerForce", " ", "=", " ", 
   RowBox[{"x", " ", "/.", " ", 
    RowBox[{
     RowBox[{"Solve", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"l", " ", "/.", " ", "rules"}], ")"}], " ", "\[Equal]", " ", 
        "LReal"}], ",", "x"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676312328883422*^9, 3.676312364783368*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"make", " ", "a", " ", "plot"}], ",", " ", 
   RowBox[{
   "just", " ", "to", " ", "show", " ", "how", " ", "this", " ", "all", " ", 
    "works", " ", "for", " ", "sensibly", " ", "scaled", " ", "parameter"}]}],
   " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6763123902009373`*^9, 3.6763124022766953`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RelativeExt", " ", "=", " ", 
   RowBox[{
    RowBox[{"ExtensionPerForce", "/", 
     SubscriptBox["L", "0"]}], "/.", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "p"], "\[Rule]", " ", "1"}], ",", 
      RowBox[{
       SubscriptBox["K", "0"], "\[Rule]", " ", "1500"}], ",", 
      RowBox[{
       SubscriptBox["k", "b"], "\[Rule]", " ", "1"}], ",", " ", 
      RowBox[{"T", "\[Rule]", " ", "1"}]}], "}"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.676312369992436*^9, 3.676312413342012*^9}, {
   3.676312456228945*^9, 3.6763124762007923`*^9}, 3.676312640684512*^9, 
   3.6763126728375*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", "RelativeExt", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0", ",", "11"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Force, \!\(\*SubscriptBox[\(K\), \(0\)]\)=1500 (\!\(\*SubscriptBox[\
\(k\), \(b\)]\)T/\!\(\*SubscriptBox[\(L\), \(p\)]\))\>\"", ",", 
      "\"\<Relative Extension (x/\!\(\*SubscriptBox[\(L\), \(0\)]\))\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.676311817324646*^9, 3.67631183530826*^9}, {
  3.676311885179652*^9, 3.676311912040189*^9}, {3.676311951397744*^9, 
  3.6763119613538313`*^9}, {3.676312042013414*^9, 3.676312042457148*^9}, {
  3.6763120911077423`*^9, 3.676312095712328*^9}, {3.6763122737774067`*^9, 
  3.676312273923905*^9}, {3.676312415814587*^9, 3.6763124428457937`*^9}, {
  3.676312480144219*^9, 3.6763125717004642`*^9}, {3.6763126112180777`*^9, 
  3.676312695224186*^9}, {3.676922761206108*^9, 3.676922796024743*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
f/vE7OIiRSoFpx5ulfp/GYbHow==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
    "\"Force, \\!\\(\\*SubscriptBox[\\(K\\), \\(0\\)]\\)=1500 \
(\\!\\(\\*SubscriptBox[\\(k\\), \\(b\\)]\\)T/\\!\\(\\*SubscriptBox[\\(L\\), \
\\(p\\)]\\))\"", TraditionalForm], 
    FormBox[
    "\"Relative Extension (x/\\!\\(\\*SubscriptBox[\\(L\\), \\(0\\)]\\))\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{577.9296875, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.67631182113268*^9, 3.676311846920998*^9}, {
   3.676311881496009*^9, 3.676311905653582*^9}, {3.676311951977167*^9, 
   3.6763119617587223`*^9}, {3.676312038470645*^9, 3.676312095960246*^9}, 
   3.676312274332716*^9, {3.676312416194652*^9, 3.676312480444099*^9}, {
   3.676312557407496*^9, 3.67631256652483*^9}, {3.676312617319675*^9, 
   3.676312695640126*^9}, {3.6769227621222763`*^9, 
   3.676922796375098*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
YhllnauLMxSzXAw4YXjJkazF5/4v9EhNfA==\
\>"]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Write", " ", "down", " ", "the", " ", "actual", " ", "numerical", " ", 
    "coefficients"}], ",", " ", 
   RowBox[{
    RowBox[{"see", " ", "ibid"}], "..."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.670451554884589*^9, 3.670451562919261*^9}, {
  3.670451636236165*^9, 3.670451637319523*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"coeffs", " ", "=", " ", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubscriptBox["a", "0"], "\[Rule]", " ", "0"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "1"], "\[Rule]", "0"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "2"], "\[Rule]", 
      RowBox[{"-", ".5164228"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "3"], "\[Rule]", 
      RowBox[{"-", "2.737418"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "4"], "\[Rule]", "16.07497"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "5"], "\[Rule]", 
      RowBox[{"-", "38.87607"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "6"], "\[Rule]", "39.49949"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      SubscriptBox["a", "7"], "\[Rule]", 
      RowBox[{"-", "14.17718"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.67045156361388*^9, 3.670451680244774*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ForceFull", " ", "=", " ", 
    RowBox[{"Force", " ", "/.", " ", "rules"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.670294616594521*^9, 3.6702946221699257`*^9}, {
   3.670294652293481*^9, 3.6702946666109877`*^9}, {3.6702946988250113`*^9, 
   3.6702947038459997`*^9}, {3.670366238245816*^9, 3.670366238533321*^9}, {
   3.6704514391454077`*^9, 3.6704514398190203`*^9}, 3.6704515775229683`*^9, {
   3.670464038615265*^9, 3.670464044548759*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mRules", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["F", 
       SubscriptBox["K", "0"]], "-", 
      FractionBox[
       SubscriptBox["p", "0"], 
       SubscriptBox["L", "0"]]}], " ", "\[Rule]", " ", 
     RowBox[{"-", 
      SubscriptBox["l", "0"]}]}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["F", 
        SubscriptBox["K", "0"]]}], "+", 
      FractionBox[
       SubscriptBox["p", "0"], 
       SubscriptBox["L", "0"]]}], "\[Rule]", " ", 
     SubscriptBox["l", "0"]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6707222887969437`*^9, 3.670722293656868*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["F", 
      SubscriptBox["K", "0"]], "-", 
     FractionBox[
      SubscriptBox["p", "0"], 
      SubscriptBox["L", "0"]]}], "\[Rule]", 
    RowBox[{"-", 
     SubscriptBox["l", "0"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["F", 
       SubscriptBox["K", "0"]]}], "+", 
     FractionBox[
      SubscriptBox["p", "0"], 
      SubscriptBox["L", "0"]]}], "\[Rule]", 
    SubscriptBox["l", "0"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670722294077826*^9, {3.670755434925045*^9, 3.670755449624838*^9}, 
   3.6707554899027348`*^9, 3.670942709585855*^9, 3.6709429301597443`*^9, {
   3.670943223932672*^9, 3.6709432492252274`*^9}, 3.670949391997802*^9, 
   3.676298353950371*^9, {3.6763117188408613`*^9, 3.676311733632504*^9}, 
   3.67631184699922*^9, {3.6763120530368547`*^9, 3.676312064418014*^9}, 
   3.676922764455202*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "Before", " ", "we", " ", "go", " ", "down", " ", "a", " ", "rabbit", " ", 
    "hole", " ", "with", " ", "the", " ", "extensible", " ", "model"}], ",", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "lets", " ", "get", " ", "to", " ", "know", " ", "the", " ", "non"}], 
     "-", 
     RowBox[{"Extensible", " ", "model"}]}], "..."}]}], "\[IndentingNewLine]",
   "*)"}]], "Input",
 CellChangeTimes->{{3.670463970616131*^9, 3.670463986791442*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Write", " ", "down", " ", "the", " ", "non"}], "-", 
   RowBox[{"extensible", " ", "model"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.670451441104116*^9, 3.6704514458689528`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NonExtensible", " ", "=", " ", 
  RowBox[{"ForceFull", " ", "/.", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"F", " ", "\[Rule]", " ", "0"}], ",", " ", 
     RowBox[{"n", " ", "\[Rule]", " ", "7"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.67045144947009*^9, 3.670451484319792*^9}, 
   3.670451577530533*^9, {3.670502486172391*^9, 3.67050248727186*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"T", " ", 
   SubscriptBox["k", "b"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], "+", 
     FractionBox["1", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          FractionBox["x", 
           SubscriptBox["L", "0"]]}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "7"], " ", 
       SubscriptBox["a", "7"]}], 
      SubsuperscriptBox["L", "0", "7"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "6"], " ", 
       SubscriptBox["a", "6"]}], 
      SubsuperscriptBox["L", "0", "6"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "5"], " ", 
       SubscriptBox["a", "5"]}], 
      SubsuperscriptBox["L", "0", "5"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "4"], " ", 
       SubscriptBox["a", "4"]}], 
      SubsuperscriptBox["L", "0", "4"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "3"], " ", 
       SubscriptBox["a", "3"]}], 
      SubsuperscriptBox["L", "0", "3"]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       SubscriptBox["a", "2"]}], 
      SubsuperscriptBox["L", "0", "2"]], "+", 
     FractionBox["x", 
      SubscriptBox["L", "0"]]}], ")"}]}], 
  SubscriptBox["L", "p"]]], "Output",
 CellChangeTimes->{{3.670451452704527*^9, 3.67045148456778*^9}, 
   3.670464050319215*^9, {3.670502487734745*^9, 3.6705025170113487`*^9}, 
   3.670592436577839*^9, 3.670670785306521*^9, 3.670722104972054*^9, {
   3.670755435222987*^9, 3.670755449933867*^9}, 3.6707554902218227`*^9, 
   3.670942710735147*^9, 3.670942930225656*^9, {3.670943224001316*^9, 
   3.6709432492915*^9}, 3.670949392067093*^9, 3.676298354000394*^9, {
   3.6763117189152393`*^9, 3.676311733669167*^9}, 3.676311847075552*^9, {
   3.676312053076973*^9, 3.676312064473856*^9}, 3.676922764514969*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NonExtensibleByRelExtension", " ", "=", " ", 
  RowBox[{"NonExtensible", " ", "/.", " ", 
   RowBox[{"x", " ", "\[Rule]", " ", 
    RowBox[{
     SubscriptBox["x", "rel"], "*", 
     SubscriptBox["L", "0"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.670949375924973*^9, 3.6709493856201153`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"T", " ", 
   SubscriptBox["k", "b"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "4"]}], "+", 
     FractionBox["1", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          SubscriptBox["x", "rel"]}], ")"}], "2"]}]], "+", 
     SubscriptBox["x", "rel"], "+", 
     RowBox[{
      SubscriptBox["a", "2"], " ", 
      SubsuperscriptBox["x", "rel", "2"]}], "+", 
     RowBox[{
      SubscriptBox["a", "3"], " ", 
      SubsuperscriptBox["x", "rel", "3"]}], "+", 
     RowBox[{
      SubscriptBox["a", "4"], " ", 
      SubsuperscriptBox["x", "rel", "4"]}], "+", 
     RowBox[{
      SubscriptBox["a", "5"], " ", 
      SubsuperscriptBox["x", "rel", "5"]}], "+", 
     RowBox[{
      SubscriptBox["a", "6"], " ", 
      SubsuperscriptBox["x", "rel", "6"]}], "+", 
     RowBox[{
      SubscriptBox["a", "7"], " ", 
      SubsuperscriptBox["x", "rel", "7"]}]}], ")"}]}], 
  SubscriptBox["L", "p"]]], "Output",
 CellChangeTimes->{{3.6709493859523067`*^9, 3.670949392099786*^9}, 
   3.6762983540422363`*^9, {3.676311718953603*^9, 3.676311733690023*^9}, 
   3.6763118471130466`*^9, {3.676312053126841*^9, 3.676312064496092*^9}, 
   3.6769227645571127`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"Write", " ", "it", " ", "in", " ", "units", " ", "of", " ", 
    SubscriptBox["k", "b"], 
    RowBox[{"T", "/", 
     SubscriptBox["L", "p"]}]}], ",", " ", 
   RowBox[{"and", " ", 
    RowBox[{"x", "/", 
     SubscriptBox["L", "0"]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6704514855079317`*^9, 3.670451510494134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"plotRules", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["L", "p"], "\[Rule]", " ", 
    RowBox[{
     SubscriptBox["k", "b"], "*", "T"}]}], "}"}], " "}]], "Input",
 CellChangeTimes->{{3.670949436772893*^9, 3.6709494485292263`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["L", "p"], "\[Rule]", 
   RowBox[{"T", " ", 
    SubscriptBox["k", "b"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.670949446490365*^9, 3.6762983540820837`*^9, {3.676311719036776*^9, 
   3.676311733709387*^9}, 3.6763118471737013`*^9, {3.676312053208268*^9, 
   3.6763120645423098`*^9}, 3.6769227645914373`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RelativeForceNonExt", " ", "=", " ", 
  RowBox[{
  "NonExtensibleByRelExtension", "  ", "/.", " ", "plotRules"}]}]], "Input",
 CellChangeTimes->{{3.67045151214396*^9, 3.670451536969632*^9}, 
   3.67045157754075*^9, {3.6704517025953217`*^9, 3.670451703395034*^9}, {
   3.6709493888425007`*^9, 3.670949391209053*^9}, {3.6709494419507313`*^9, 
   3.670949451560725*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "4"]}], "+", 
  FractionBox["1", 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SubscriptBox["x", "rel"]}], ")"}], "2"]}]], "+", 
  SubscriptBox["x", "rel"], "+", 
  RowBox[{
   SubscriptBox["a", "2"], " ", 
   SubsuperscriptBox["x", "rel", "2"]}], "+", 
  RowBox[{
   SubscriptBox["a", "3"], " ", 
   SubsuperscriptBox["x", "rel", "3"]}], "+", 
  RowBox[{
   SubscriptBox["a", "4"], " ", 
   SubsuperscriptBox["x", "rel", "4"]}], "+", 
  RowBox[{
   SubscriptBox["a", "5"], " ", 
   SubsuperscriptBox["x", "rel", "5"]}], "+", 
  RowBox[{
   SubscriptBox["a", "6"], " ", 
   SubsuperscriptBox["x", "rel", "6"]}], "+", 
  RowBox[{
   SubscriptBox["a", "7"], " ", 
   SubsuperscriptBox["x", "rel", "7"]}]}]], "Output",
 CellChangeTimes->{{3.6704515299774837`*^9, 3.670451537295704*^9}, 
   3.670451703748143*^9, 3.670464050402288*^9, {3.6705024886659813`*^9, 
   3.670502517111718*^9}, 3.6705924366182013`*^9, 3.670670785362015*^9, 
   3.670722105036497*^9, {3.670755435261992*^9, 3.670755449970149*^9}, 
   3.6707554903049603`*^9, 3.670942710818552*^9, 3.670942930288561*^9, {
   3.6709432240894947`*^9, 3.670943249357894*^9}, 3.670949392168339*^9, {
   3.6709494502676992`*^9, 3.670949451875724*^9}, 3.676298354125609*^9, {
   3.6763117190737467`*^9, 3.676311733738916*^9}, 3.67631184719545*^9, {
   3.6763120532510777`*^9, 3.676312064579061*^9}, 3.676922764640065*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApproxExpansion", " ", "=", " ", 
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{"NonExtensibleByRelExtension", ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "rel"], ",", "0", ",", "2"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6709493310376453`*^9, 3.67094936164427*^9}, {
  3.6709493931156797`*^9, 3.670949414726767*^9}, {3.6709494569535847`*^9, 
  3.670949460192747*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", "T", " ", 
    SubscriptBox["k", "b"], " ", 
    SubscriptBox["x", "rel"]}], 
   RowBox[{"2", " ", 
    SubscriptBox["L", "p"]}]], "+", 
  FractionBox[
   RowBox[{"T", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", 
      RowBox[{"4", " ", 
       SubscriptBox["a", "2"]}]}], ")"}], " ", 
    SubscriptBox["k", "b"], " ", 
    SubsuperscriptBox["x", "rel", "2"]}], 
   RowBox[{"4", " ", 
    SubscriptBox["L", "p"]}]]}]], "Output",
 CellChangeTimes->{{3.6709493511735897`*^9, 3.670949414943975*^9}, {
   3.670949458479247*^9, 3.6709494604639874`*^9}, 3.676298354153632*^9, {
   3.6763117191269197`*^9, 3.6763117337531033`*^9}, 3.676311847228459*^9, {
   3.676312053293186*^9, 3.6763120646296177`*^9}, 3.6769227646698513`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"RelativeForceNonExtWithCoeffs", " ", "=", " ", 
   RowBox[{"RelativeForceNonExt", " ", "/.", " ", "coeffs"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.670451683620935*^9, 3.670451697121623*^9}, 
   3.670502501124426*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RelativeForceNonExtNoCoeffs", " ", "=", " ", 
   RowBox[{"RelativeForceNonExt", " ", "/.", " ", 
    RowBox[{
     SubscriptBox["a", "i_"], "\[Rule]", " ", "0"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6704544803350973`*^9, 3.670454489613657*^9}, {
  3.670502494424882*^9, 3.670502512972747*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ApproxPlot", " ", "=", " ", 
  RowBox[{
   RowBox[{"ApproxExpansion", " ", "/.", " ", "coeffs"}], " ", "/.", " ", 
   "plotRules"}]}]], "Input",
 CellChangeTimes->{{3.670949430968272*^9, 3.67094947311234*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"3", " ", 
    SubscriptBox["x", "rel"]}], "2"], "+", 
  RowBox[{"0.23357720000000004`", " ", 
   SubsuperscriptBox["x", "rel", "2"]}]}]], "Output",
 CellChangeTimes->{{3.670949432787422*^9, 3.670949473404408*^9}, 
   3.676298354237845*^9, {3.6763117191972847`*^9, 3.676311733784772*^9}, 
   3.67631184729193*^9, {3.6763120533717422`*^9, 3.676312064747383*^9}, 
   3.6769227647316093`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "RelativeForceNonExtNoCoeffs", ",", "RelativeForceNonExtWithCoeffs", ",", 
     "ApproxPlot"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "rel"], ",", "0", ",", "0.85"}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", "\"\<Non-Exensible Worm-Like Chain FEC\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dotted", ",", "Thick", ",", 
      RowBox[{"{", 
       RowBox[{"DotDashed", ",", "Thick"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Without Polynomials\>\"", ",", "\"\<With Polynomials\>\"", ",", 
      "\"\<Approxmate Expansion\>\""}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Relative Extension, \!\(\*FractionBox[\(x\), SubscriptBox[\(L\), \
\(0\)]]\)\>\"", ",", 
      "\"\<Relative Force, \!\(\*FractionBox[SubscriptBox[\(FL\), \(p\)], \
\(\*SubscriptBox[\(k\), \(b\)] T\)]\)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6704517091830873`*^9, 3.670451736895177*^9}, {
  3.670451797095521*^9, 3.670451802677721*^9}, {3.670451846996716*^9, 
  3.670451947723928*^9}, {3.670454445701067*^9, 3.670454572110848*^9}, {
  3.6704546246117287`*^9, 3.670454655331706*^9}, {3.6707554335217667`*^9, 
  3.670755447531848*^9}, {3.6707554883484173`*^9, 3.670755488664713*^9}, {
  3.67094310351118*^9, 3.670943146991766*^9}, {3.6709432461995087`*^9, 
  3.670943248171596*^9}, {3.670949425109811*^9, 3.67094942522328*^9}, {
  3.67094946364177*^9, 3.670949488497799*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}]], 
       LineBox[CompressedData["
1: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
Mrk=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6], 
        Thickness[Large]], 
       LineBox[CompressedData["
1:eJwVlGk81IsXxkVjiCwxw5CyllRI/i2Sc26UYkKUa8mWpSQRkWqUxtaiqOhW
9lFIRclSKtlJKPtSamwz85spcYsyStf/xfmcF8/z+Z7neXM0DgTZ+4qKiIgk
zM//N/0CiW6VZW9mM7QpNGjC1WzQ0pv9m7IObsUNf8TszdBR1JbZR/kLcknd
DfTsXdDiHfOnnrIHJDVzs8qzneH1Vo+iFxQvmHsio1/C8oemAjr5KeUYOJ39
FlZ25yRYepk/KaWcg9uTe6du5V+A+BdmF0ooVyHAUPROZ9Et6Hz5WDO3NRuU
qw9R/nQUgPFcuYFjaAGo5K2cGZ1+Ar2so+yW8MegFrE0If5wBRye2FLFlS2D
Qna4uHtFFfjpR5cfd6kAnwi6hMiiOthEJTUIRV5Bv8Q7FeOCRmhBa+uxpmqg
GNsPjGx/A4/H7UCcXwuK7q9urnvcBlGT3yq1NjdAjm3FoI5pO8R8drASejZB
qyjrV6hkJ9jce142FdkMerZ6bS59XSD2vKrwS1MLiLbMhhl86IEvdczijM9t
oHKPEt79pg/Y8pPqKzLfQZCknzB1egD0WdrOiTXtwLg8WflLbxBuFG5Q2tfR
Ac0/j4wL6J8g1FdJlTbTCR+5hSbeA2wIuNlzZ7N0Nyy3YRIrxYehL8znuNOG
Hrh7f+6uiMsI6BqHl0i69oIy9/1w4dNRuH7U75TSkT64dqLC+IscB0IddOK0
kvshuVpOcWMqFwJLapQS8gfgPX3Ou0qDAOvpEVp8+Xuw8rBsin3Kh4zhTq+o
wQ+w7Pe7jYFJn0HKmmXQ83UQzhkZHO32H4dxNzDXo32CNy/rT/9tNQEDuo+8
zy9jw/T9oRT70EloZhfx7uWyQbHjqsci1r8w9eVGkpXJEDzUfdBvKfUd1m4O
PE2rGwKGuO250agp6D0em7HOehg6iheLHVH6Ac9JsaNNg8OwasbCU0p8Bh50
hQZe8RuBJKbKuKPsLPT93EXrFI5AX5f/jj/XfoO8q6zEjthRYOsH+1/RFMEX
D6kGoovH4LbfKVZy3gJk7SOd3Jo1BqcVzo9SrothypYRUt4qDtzpLuj2LCQh
046VL1zNgdes+107n5LwqK+XtY0+B+5/d5/YWEPCnYmfkqaMOGCcaHJrdQ8J
hcPvVS1MOcAzUQ7xnyOh58WudUM2HIgoFfPbbieOa/rr3VSPc8D/RMm2xzPi
WBueX5pYyYFIVrixjK8EhlzfGdlXNX8v7yG1OlgC1R/xLDRqOTCgJlLJYEgg
g9DtKm7kwOFy0bMyyRK4Yf+9f7vfcUDGcU1NWq0EFvxVYLB0hAMTpkX6R7Ql
8Zr0g3v5ZC7YuY+QlL9I4gFWUXq1HReMJiwsetOkUJLhumzEngt1uWpRCgVS
+GgfOXPhPi5c3DPwj3O5FP6W8MiydOZCbrA4U6xDCm8GyeS0enFhfYpw71uy
NLaaBub3h3Bh/5aZ57Zh0ripV+/JZDIX2k9udzN1Wowy0rlNGv1cOKl/xXAT
yuKi6MHtx95z4QJlGzl1jyyShIq1VYNcwIXL2qW9ZfEXN/qlx/A8b+QKUy1O
FgW1XsXpgnldIxCmWmSx6bRaGm2OC2mPSuob9OWQKUgOktfiwelzJeRj9XI4
1RxNXRDIg4ibF83NFi9B3lwDfVUQD4IlEno8lZbgB6NF0XuO8UAlnr0yQWMJ
1t1O+podxoOFColrf/9vCSYfTm/adoYHH6wi2bs8lqDRovJTMYk8SA9Pnbjx
ZAkG7eJ/JBfzgJbqs9XaWwGJRrs8mR88WLZb1LdoSBEzxMJE18zM5zGlRKuM
K+JeuOW2a5YHY9fnBElCRawqG1KI+cMD9ZKxrkwFCt64GxI1QybAviYm1nIH
BbdFJzuPKhOQURn0vPkhBdPM+qQqTAiY0VV4S46jov2pX369pvP+uAbbn9ep
SC5Tr/luRkB/gKhwKpuKIWv9IwzMCVjoqLeYVknFXUuFo3esCajyvyQq8oOK
0zOqlYn7CWg5kKPlGaCEtqUewb5nCDjE4jZz3JXR5Yps06MoAjoDsshTQcro
c/DV8l9MAsyCC49RzinjKdryt9fiCZhN4hhfzlHGO5Ef11YlEWD8Lc3BlVDG
n9vdBCo5BNSkNAVciKBhVo+L37tGAtp3p0t+u6uCBUWLKlWbCWBWX4tgPFPB
0vMVlIMtBKw2/OeBaqsKNpuo1P9+R0BmHWks9bsKfs/o11o9QECdnsnaPAtV
3HnQaSj2MwE2JZnJ4oQqTvzYt3+LPB/eGEXODZmr4bfL8oEeCnzYS5VeMOak
htNarZHRFD4UMKo4c4FqOGtrkfmGxoerXgz2iZtqKJ5vNOyqyYfXsc9MmeNq
uNRJ9hBjPR9qzWrZ1MxlaPm0KfTlPj4wDl9qzZRURyubmJihv/lQ5ZAtU0xR
R/oopJBc+JC/9ZJCh4Y62suVl+1254P4YMqLLSbquP/Q3ZlBPz6civf7WB6g
jiHKzLNzJ/jwwNnhrF+7OmZEbLkEt/mQ8vrZUsjXwO/UMuecND7QS8Qde8o1
0KrUUJecyYc4vQIfZqMGTk3q1LflzPNTs2/QuBpID5D74/Zwvk+mY/DOlZoo
dBsLYVTxIaynTL/5viY6mie6POPw4UdnvT+zQQsfDEmuUiP4cJC88atovxaK
RsX8iBLM8/TjMtMFWvjwxcnknRPzf97k8g5NeW1cuMGnrXeGD2d6igyPumlj
se7mbdPSAnA0LKKZzWqjROMTORdZAZSzqOEnZXXQ3Vf/00t5AUC3O71DSwcl
WVqMWKoAYqsN6YN0HfRUlSlTVBeAloPcH/csHSx7dj4mQlMARzYLExJKdVDK
Sczhg7YAfr6KP9rfPK8n//yas0oAlFkP7Y4pHZReH1pJXiOA7DyF8DNSK/BA
+5eEAH0BBJxAqrXGCnwadMj1raEAfFo1t2/auAIXy4ysWr9eAPlL/zHfsXsF
/gfolyil
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small, Small, Small}], 
        Thickness[Large]], 
       LineBox[CompressedData["
1:eJwVjHk01AkAx1Gz2JzVjEfLitixWyNbzzaJL9vuWlfJ0SbZSChCDKLtkFuX
cz0rkSHFS3JLQiWkSbmPkmGcv59jxvGb8rZm2z8+7/PH573P5mOBDl4yUlJS
dl/437aJNFvrWw5mJ4JtOYFCV7NhS0/+J7oR7ktuS1nksdFV2pE7QLdAbUys
nV2eFXieMZLn9AMom06tfZjnghemR0vr6R7IHHY6U889ibZiW9laehDeu22d
6SuIgKXH3ooq+iXcNqBZMooSEV9vllhJT0Fv4Utklf2D7sdlOoWv8nA7Wzr9
/GAxdn6uMTzIKYaH0ZC7q6QC/dwAPi+sDOXZBdzTEXXwFZo0TSlX413WH3ta
mpvgzYquCTlch9r3C2lLG5uxi0FrWZVqxPLIA3nJg1bwzG1sJtqeIECj2FfD
4iXK5u3xFfEMpoob2LaZHYgULTXosltAju4yNNbqRMyso/WqexuUL6WLrnV3
YV/Ro+qV8+3YphB6wzuqB2seNd2fa+Oh+VS4ocmhPsw1R5XnzHagpTE5sE9l
AHxVkbZ+7hswnXqrhoSDYHG3uCQ97cTFhKrkxPa3yLhvrObc1QVzHb+Vs3HD
4HipbVL/2A0y4+k3br4j8MvsK2Ar9KKOd9nk20w+BkKPhxwy7kPEr9pqSBoF
c2dYpbxrP1743SrQiB5DWoD3WbVTA1BWlwRU+AjAcdSL000fRE09N63RfRz+
lU/Vrt4dwmh8nY6P9QRsKIF6fM1bVFlMN8Rtn0TOWLdH5PA7SBc5/Xjkhyms
s+Ea9i0MY0wrLegqYxrzbtj7vfoIUge2sYoYMxhiPvBM0OJDmpnT77CBQDu/
dLqokI99+wktuhSJlbmMZOvdozj3C2dEVmYW29j+f6k3jyIsNS5atDSL/pDY
HCObMSiG83K3jM3hES12vG14DM/87aPaJ+Zxr4fjf91bgBv3vAb0Bxcw8MFK
vXtVAK2kWTYjSAhVV2W532LHsZnTau85J0R9CcNQRnEC9R6S4DYfEbjOtAjT
WxOY1zWO1Z0T4W8TAe2OwSQaeZ1RTN9FPAu7W5XUMInomPjXZouLOMYtvfnE
fgpi843ZZ8KXoKRQ2LZ5cAopybksNrWElfZohrT/NN6sl9NkXVzGTKv9HSXx
NOS+7ZnNkixjf9XR014XZpCuacGRu7ACodj5iIkqgcSO95fbZSnkhJtcQRaB
OKtw0/EECsuMapf8bAJPQq4QelcoWFdtZ8rmEtB+Zc31uUZhRaT3vCOfgBWt
w4hMoWDrpyJxKyHgnDb5ZjGLwqrbRPC5JgL79d2V15ZQOLg36fDDyS+/70Kv
sTop3BuVN9CcIZAiVkwO6qYgExkjjiQJxC473KzspVBSH5H+u5DAUOho/+4h
CmuNj3f0fySwJ0PllaWAQjmT/TOlQGLMrqbGc4WCXGuFymFlEv8urPe6I6bw
pxdr5LEqid2NGprkRwryXN1zsQwSehOskuDPFNw3KVVv1CZRvu+kXZSsGNUP
E2LCdUiIXPTtW+TFWHdojeO7LSScUpPcvlb40tM/LOQbkEi87J2ZqiKGwg5O
g+xWEkese573rRfjWOfcVT8WCcef5j9p0MWoDTzh+no7iYADleZH1cRQVBIY
7NhBoiRT/3q+uhj/AeP3cXU=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox[
       "\"Relative Extension, \\!\\(\\*FractionBox[\\(x\\), SubscriptBox[\\(L\
\\), \\(0\\)]]\\)\"", TraditionalForm], 
       FormBox[
       "\"Relative Force, \\!\\(\\*FractionBox[SubscriptBox[\\(FL\\), \
\\(p\\)], \\(\\*SubscriptBox[\\(k\\), \\(b\\)] T\\)]\\)\"", TraditionalForm]},
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> 
     FormBox["\"Non-Exensible Worm-Like Chain FEC\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"Without Polynomials\"", "\"With Polynomials\"", 
       "\"Approxmate Expansion\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small, Small, Small}], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.670451914949217*^9, 3.670451948002441*^9}, {
   3.670454460436648*^9, 3.6704544940228453`*^9}, {3.670454537776394*^9, 
   3.670454572519643*^9}, {3.670454625234728*^9, 3.670454655588591*^9}, 
   3.670464050552677*^9, {3.670502488797061*^9, 3.670502517243326*^9}, 
   3.670592436783235*^9, 3.670670785659275*^9, 3.670722105361062*^9, {
   3.670755435380445*^9, 3.670755450053488*^9}, 3.670755490386548*^9, 
   3.670942711027192*^9, 3.670942930385242*^9, {3.670943108841119*^9, 
   3.670943147360826*^9}, {3.670943224276495*^9, 3.670943249519915*^9}, 
   3.670949392340476*^9, {3.670949464382256*^9, 3.6709494888269663`*^9}, 
   3.676298354319919*^9, {3.676311719272821*^9, 3.67631173401332*^9}, 
   3.676311847365793*^9, {3.6763120534449472`*^9, 3.676312064828528*^9}, 
   3.676922765055553*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", "\[IndentingNewLine]", 
  RowBox[{"Okay", ",", " ", 
   RowBox[{
   "now", " ", "for", " ", "some", " ", "Jacobian", " ", "Nastiness"}]}], 
  "\[IndentingNewLine]", "*)"}]], "Input",
 CellChangeTimes->{{3.670463989499943*^9, 3.6704639973835993`*^9}, {
  3.67046410485679*^9, 3.670464106000977*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Start", " ", "off", " ", "with", " ", "some", " ", "rules", " ", "to", 
    " ", "simplify", " ", "the", " ", "expressions"}], "..."}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.670464165443084*^9, 3.67046417527178*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mRules", " ", "=", " ", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["k", "b"], "*", 
      RowBox[{"T", "/", 
       SubscriptBox["L", "p"]}]}], "\[Rule]", " ", 
     SubscriptBox["c", 
      RowBox[{"b", ",", "p"}]]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "/", 
       SubscriptBox["L", "0"]}], "-", 
      RowBox[{"F", "/", 
       SubscriptBox["K", "0"]}]}], "\[Rule]", " ", "l"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "x"}], "/", 
       SubscriptBox["L", "0"]}], "+", 
      RowBox[{"F", "/", 
       SubscriptBox["K", "0"]}]}], "\[Rule]", " ", 
     RowBox[{"-", "l"}]}]}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{{3.670464179480022*^9, 3.67046422775626*^9}, {
  3.6704642612280293`*^9, 3.670464276473811*^9}, {3.670464307078673*^9, 
  3.670464327368168*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"T", " ", 
      SubscriptBox["k", "b"]}], 
     SubscriptBox["L", "p"]], "\[Rule]", 
    SubscriptBox["c", 
     RowBox[{"b", ",", "p"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["F", 
       SubscriptBox["K", "0"]]}], "+", 
     FractionBox["x", 
      SubscriptBox["L", "0"]]}], "\[Rule]", "l"}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["F", 
      SubscriptBox["K", "0"]], "-", 
     FractionBox["x", 
      SubscriptBox["L", "0"]]}], "\[Rule]", 
    RowBox[{"-", "l"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.67046418060679*^9, 3.670464228125875*^9}, {
   3.670464261838324*^9, 3.670464277011407*^9}, {3.670464307819128*^9, 
   3.670464327629957*^9}, {3.670502488914617*^9, 3.670502517328978*^9}, 
   3.670592436861823*^9, 3.6706707858960752`*^9, 3.670722105452034*^9, {
   3.670755435439681*^9, 3.6707554501161823`*^9}, 3.670755490436019*^9, 
   3.670942711102089*^9, 3.67094293046796*^9, {3.670943224413731*^9, 
   3.6709432496419477`*^9}, 3.670949392463657*^9, 3.676298354413842*^9, {
   3.676311719354809*^9, 3.676311734280795*^9}, 3.676311847420774*^9, {
   3.676312053492321*^9, 3.6763120649074373`*^9}, 3.6769227651450253`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertToC", "[", "expr_", "]"}], " ", ":=", " ", 
  RowBox[{"CForm", "[", 
   RowBox[{"expr", " ", "/.", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["L", "0"], "\[Rule]", " ", "L0"}], ",", 
      RowBox[{
       SubscriptBox["K", "0"], "\[Rule]", " ", "K0"}], ",", 
      RowBox[{
       SubscriptBox["a", "i_"], "\[Rule]", " ", 
       RowBox[{"a", "[", "i", "]"}]}], ",", " ", 
      RowBox[{
       SubscriptBox["c", 
        RowBox[{"b", ",", "p"}]], "\[Rule]", " ", "cbp"}]}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.6705022323368673`*^9, 3.670502361971966*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DerivWithL0", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"ForceFull", ",", 
      SubscriptBox["L", "0"]}], "]"}], "  ", "/.", " ", "mRules"}], " ", "/.",
    " ", "mRules", "  "}]}]], "Input",
 CellChangeTimes->{{3.6704641082738333`*^9, 3.670464210029376*^9}, {
  3.67046427971727*^9, 3.670464350726465*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", 
   RowBox[{"b", ",", "p"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["x", 
      SubsuperscriptBox["L", "0", "2"]]}], "-", 
    FractionBox["x", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "l"}], ")"}], "3"], " ", 
      SubsuperscriptBox["L", "0", "2"]}]], "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "2"}], "n"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"i", " ", 
        SuperscriptBox["l", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "i"}]], " ", "x", " ", 
        SubscriptBox["a", "i"]}], 
       SubsuperscriptBox["L", "0", "2"]]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.670464116251747*^9, 3.670464152534658*^9}, {
   3.6704641826897287`*^9, 3.670464228823749*^9}, {3.670464262686678*^9, 
   3.670464350999352*^9}, 3.6705023240485477`*^9, {3.670502489616024*^9, 
   3.670502517377995*^9}, 3.670592437566422*^9, 3.6706707866566477`*^9, 
   3.670722106124546*^9, {3.670755435488984*^9, 3.670755450166102*^9}, 
   3.670755490476492*^9, 3.670942711824541*^9, 3.670942930536978*^9, {
   3.6709432244622917`*^9, 3.670943249725263*^9}, 3.6709493925146523`*^9, 
   3.6762983552530727`*^9, {3.6763117194477177`*^9, 3.676311734937338*^9}, 
   3.676311847491293*^9, {3.676312053523088*^9, 3.6763120649456*^9}, 
   3.676922765978325*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DerivWithK0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"ForceFull", ",", 
      SubscriptBox["K", "0"]}], "]"}], "  ", "/.", " ", "mRules"}], " ", "/.",
    " ", "mRules", " "}]}]], "Input",
 CellChangeTimes->{{3.6704643825838223`*^9, 3.670464391194524*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", 
   RowBox[{"b", ",", "p"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["F", 
     SubsuperscriptBox["K", "0", "2"]], "+", 
    FractionBox["F", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "l"}], ")"}], "3"], " ", 
      SubsuperscriptBox["K", "0", "2"]}]], "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "2"}], "n"], 
     FractionBox[
      RowBox[{"F", " ", "i", " ", 
       SuperscriptBox["l", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "i"}]], " ", 
       SubscriptBox["a", "i"]}], 
      SubsuperscriptBox["K", "0", "2"]]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.6704643916379128`*^9, 3.6705023253539133`*^9, {3.6705024903229933`*^9, 
   3.670502517419095*^9}, 3.670592438487645*^9, 3.67067078737512*^9, 
   3.670722106929358*^9, {3.670755435537924*^9, 3.670755450213909*^9}, 
   3.670755490520382*^9, 3.6709427126810904`*^9, 3.6709429305740213`*^9, {
   3.670943224495288*^9, 3.670943249762703*^9}, 3.670949392553337*^9, 
   3.676298355970627*^9, {3.676311719528297*^9, 3.676311735579965*^9}, 
   3.67631184752995*^9, {3.676312053543601*^9, 3.676312064967306*^9}, 
   3.676922766907933*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DerivWithForce", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{"ForceFull", ",", "F"}], "]"}], " ", "/.", " ", "mRules"}], " ", 
   "/.", " ", "mRules"}]}]], "Input",
 CellChangeTimes->{{3.670670792383753*^9, 3.67067080720337*^9}}],

Cell[BoxData[
 RowBox[{
  SubscriptBox["c", 
   RowBox[{"b", ",", "p"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", 
      SubscriptBox["K", "0"]]}], "-", 
    FractionBox["1", 
     RowBox[{"2", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "l"}], ")"}], "3"], " ", 
      SubscriptBox["K", "0"]}]], "+", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "2"}], "n"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"i", " ", 
        SuperscriptBox["l", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "i"}]], " ", 
        SubscriptBox["a", "i"]}], 
       SubscriptBox["K", "0"]]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.670670808205117*^9, 3.670722107557974*^9, {3.6707554355746*^9, 
   3.670755450249967*^9}, 3.670755490569067*^9, 3.670942713334516*^9, 
   3.670942930624354*^9, {3.670943224529348*^9, 3.670943249813336*^9}, 
   3.670949392602129*^9, 3.676298356836976*^9, {3.6763117195873404`*^9, 
   3.6763117363511057`*^9}, 3.676311847579859*^9, {3.676312053575102*^9, 
   3.6763120650130463`*^9}, 3.676922767596908*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"DerivWithLp", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"ForceFull", ",", 
     SubscriptBox["L", "p"]}], "]"}]}], " ", ";"}]], "Input",
 CellChangeTimes->{{3.67046440046738*^9, 3.670464424003866*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "Lp", " ", "has", " ", "an", " ", "almost", " ", "trivial", " ", 
    "derivative"}], ",", " ", 
   RowBox[{
    RowBox[{"relative", " ", "to", " ", "the", " ", "actual", " ", "force"}], 
    "..."}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6704644560055923`*^9, 3.670464468093526*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DerivWithLpRel", " ", "=", " ", 
  RowBox[{"DerivWithLp", "/", "ForceFull"}]}]], "Input",
 CellChangeTimes->{{3.6704644260284843`*^9, 3.6704644531896963`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   SubscriptBox["L", "p"]]}]], "Output",
 CellChangeTimes->{
  3.670464453544688*^9, 3.670502329484755*^9, {3.67050249043325*^9, 
   3.670502517485677*^9}, 3.67059243854065*^9, 3.670670787572825*^9, 
   3.6707221077219353`*^9, {3.670755435649096*^9, 3.670755450310925*^9}, 
   3.6707554906486273`*^9, 3.670942713567376*^9, 3.6709429307194443`*^9, {
   3.67094322459588*^9, 3.670943249891457*^9}, 3.670949392681179*^9, 
   3.676298356912796*^9, {3.676311719686647*^9, 3.676311736386476*^9}, 
   3.676311847658185*^9, {3.676312053609989*^9, 3.676312065081193*^9}, 
   3.676922767775749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ConvertToC", "[", "DerivWithL0", "]"}]], "Input",
 CellChangeTimes->{{3.670502297922493*^9, 3.670502302322546*^9}}],

Cell["\<\
cbp*(-(x/Power(L0,2)) - x/(2.*Power(1 - l,3)*Power(L0,2)) + 
     Sum(-((i*Power(l,-1 + i)*x*a(i))/Power(L0,2)),List(i,2,n)))\
\>", "Output",
 CellChangeTimes->{{3.670502302660729*^9, 3.670502364302288*^9}, {
   3.670502490470579*^9, 3.6705025175116053`*^9}, 3.670592438584001*^9, 
   3.6706707875923433`*^9, 3.6707221077451477`*^9, {3.67075543568751*^9, 
   3.67075545033348*^9}, 3.670755490681034*^9, 3.6709427136012583`*^9, 
   3.670942930758634*^9, {3.670943224633252*^9, 3.670943249925001*^9}, 
   3.670949392719653*^9, 3.6762983569396963`*^9, {3.676311719724061*^9, 
   3.6763117364072866`*^9}, 3.676311847691331*^9, {3.676312053638158*^9, 
   3.676312065102932*^9}, 3.676922767804372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PlotDeriv", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"DerivWithL0", " ", "/.", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["c", 
          RowBox[{"b", ",", "p"}]], "\[Rule]", " ", "1"}], " ", ",", " ", 
        RowBox[{"n", "\[Rule]", " ", "7"}]}], "}"}]}], ")"}], "/.", " ", 
    "coeffs"}], " ", "/.", " ", 
   RowBox[{"x", " ", "\[Rule]", " ", 
    RowBox[{"z", "*", 
     SubscriptBox["L", "0"]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6705030506147327`*^9, 3.670503057949172*^9}, {
  3.6705089601223497`*^9, 3.670509018298073*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["z", 
    SubscriptBox["L", "0"]]}], "-", 
  FractionBox["z", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "l"}], ")"}], "3"], " ", 
    SubscriptBox["L", "0"]}]], "+", 
  FractionBox[
   RowBox[{"1.0328456`", " ", "l", " ", "z"}], 
   SubscriptBox["L", "0"]], "+", 
  FractionBox[
   RowBox[{"8.212254`", " ", 
    SuperscriptBox["l", "2"], " ", "z"}], 
   SubscriptBox["L", "0"]], "-", 
  FractionBox[
   RowBox[{"64.29988`", " ", 
    SuperscriptBox["l", "3"], " ", "z"}], 
   SubscriptBox["L", "0"]], "+", 
  FractionBox[
   RowBox[{"194.38035`", " ", 
    SuperscriptBox["l", "4"], " ", "z"}], 
   SubscriptBox["L", "0"]], "-", 
  FractionBox[
   RowBox[{"236.99694`", " ", 
    SuperscriptBox["l", "5"], " ", "z"}], 
   SubscriptBox["L", "0"]], "+", 
  FractionBox[
   RowBox[{"99.24026`", " ", 
    SuperscriptBox["l", "6"], " ", "z"}], 
   SubscriptBox["L", "0"]]}]], "Output",
 CellChangeTimes->{
  3.6705030583336277`*^9, {3.670508973695393*^9, 3.670509019123959*^9}, 
   3.670592438821973*^9, 3.670670787620908*^9, 3.6707221077886353`*^9, {
   3.670755435737377*^9, 3.6707554503759947`*^9}, 3.670755490703129*^9, 
   3.670942713638876*^9, 3.6709429308080883`*^9, {3.670943224679905*^9, 
   3.670943249975441*^9}, 3.6709493927699947`*^9, 3.6762983569601297`*^9, {
   3.676311719811627*^9, 3.676311736422125*^9}, 3.676311847729177*^9, {
   3.676312053658955*^9, 3.676312065145809*^9}, 3.6769227678276787`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.670509001338501*^9, 3.6705090049012814`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"PlotDeriv", " ", "*", " ", 
    SubscriptBox["L", "0"]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"l", ",", "0", ",", "1"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Relvative Extension \!\(\*FractionBox[\(x\), SubscriptBox[\(L\), \
\(0\)]]\)\>\"", ",", 
      "\"\<Relative z=(\!\(\*FractionBox[\(x\), SubscriptBox[\(L\), \
\(0\)]]\)-\!\(\*FractionBox[\(F\), SubscriptBox[\(K\), \(0\)]]\))\>\"", ",", 
      " ", "\"\<Gradient \!\(\*FractionBox[\(df\), SubscriptBox[\(dL\), \
\(0\)]]\)(units: \!\(\*FractionBox[\(\*SubscriptBox[\(k\), \(b\)] T\), \
\(\*SubscriptBox[\(L\), \(p\)] \*SubscriptBox[\(L\), \(0\)]\)]\))\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.670509025385128*^9, 3.670509044397133*^9}, {
  3.6705090885301332`*^9, 3.670509213846991*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
I6J82uUuzU20rg2uHDzG5cZiGWo/8X4u3T3YeLyykdZzwev8Jlo9vipL6YMH
fkv21nZSoPlYfH+qE6xfRTeqkD349rJNi0L+HZ/AHt9l8DGfgWWG2mQPHjb8
+k/9iP5kj++1Txef660dh5I9uHyjvjfnLCZ7YX8KLtRtooXSGpFIIg6KXFbb
2potLnXInXklrJKbfWRka4TnHbG8l9UeHcc8sXJIXKO3YykHe/C8iYv2JwXL
SGC/UEdBxdG3QLwgqZ/PjQ4ylD54xyl7BtjmdiF7SXLiJc+0IvEMB3F7l4+a
ZA8eb1v1+Fc3I8mshDn708ITiYft6/H16orRlI7WsUA9X53f4hL5ox9OfxlF
6YCLmp5MdatykVxZIfHw1YknDh36n00LXZkWLk5Qix/uq5MrHjj4yOp+ipUc
uNmHK+/DPfPFtrMGvrTwkpW097911NH3FfFy52MaxudUJM29j9eHe36j8tou
nfTp1sCBlP6J7Std08ILxXZGIQe/7ulG6YC/6DH3zHc9Xcon+JwpYQ4/rplK
Ur+cNdVz9BWXmo3Ibm0tFhuUuvmsdVAljnJtH+Tu1Vddj54Le23XpryjqZb0
XPC5VqYu20+OpueCD8jL6FLYbwqlPz5fyUvHsVTs+GDsG/12E0h/cKGeQo70
hfzpQcMuIlEy6VaqeXDrz6RBpCd0OKBq6Z/cZE71AfzhtycV31wtyR71REtV
pmTmmFGUPuyT/Ibaxz2wInuUd/Ptccp/PKYSF9YT6IB2qde5BaNu7uDTEZYL
4yHwd/eO5A32NuKQDn7vdgk4/9rnIrd55JrwcM8y4uvaBjy5E/KHvkfk32bq
RM8PQ5SpnoOvOT/z9891fei9oFwhJ33bB3sYkD34ykX3371qEZM9yiUZIRn2
bJ4z2QvLhfZc2M6AC9sZ2Ak5nifk0AG/wvTRXwzb1tz7+vfJ1B4K84N6InyP
GPdKW1cScowfpK27CfOP/ktoj/qAfiTLb9ypJYeuR4OjvwgwTEss//wwGvUA
7e3Bz79SGkwSaF4d/YWbrdbC6o4xZI/vqOXt+/DMqDyyJ3+wpFv2JftUssf3
smR6UugwMxmq50L98V0LOdKn/68q4fyq3K3RqFdoJ7NWzFWz7VNL9Rn5Xx80
8667XSO1t8h/xPDTpaoeyvRc2I9/6PrKIKIt5RP1/8+pnb4/4/h2m/Yt+NYc
fddNldoBlHds/eCIgpP2VP+hz499tiojP6rSc2G/2/tQrzfbdYnD/pbL5nsS
596UH9TPtqU+d9tvV6TvCPZPVWfq9vmtS+0w0vc9YHRzu5s5cdhfbait+mli
SM9F+vkFyiX7/fn+Ed/1Z48I+TbhLlQufBeT7gd0CXozmNLBd7Gppdnq+qxJ
xGEf03ZKzCFdvj8FT3ocv1Wy1JHyKfy+wGG/2UzvYuO0yZS+cFyH/AvbGbSr
wvqGckmrn8LvEe9F2vhHmA7yL8wP/hba4298BxaHrnV29OXXO4T2yA/tt50Z
kPDc8yLZ49/1u/V9mNezjr4X1Gc/8ZXLOuFtKP/goXsvftg+TZP0QT2xcD73
ce9cbbKnfdmc7f7RKwcTF74XfC+oV/1MdJtVW6fT945y2QcZ7TrxYBP1X8J2
D34H6vMqAyU/49mjaX8C+PqKRQHij6Mk3UY0XtFxTKXvIs1j8mXjCAeaP5FW
H4TPRbmEHOMQYTqoh9Le1/oFsg8807LE6p+Gh1ybI6F+HONGE12T2ckpn4ij
3avc++D8zJ0/aL4U7dWViWN7/IiTpfShw4zk7p/adKqndPB+PyyfcCyzsoSD
PkhH1jXywof2w0gHafVc2jqvUB/Uf2nfhbT5JWH/Cy6sV/iOpI0rpNVDoT3m
X4T5fNPGPshX5/1fHOUVctRP9C82dqO85Q8NIg79W0Sd903eN0SyruK9oaNv
Oumv321E2evFI2ifTIXPEI/x2vz+K9GhewN6hGVJ3Q+mlnvY/933or/2z8Sc
PRLSeo7n+P8X9pyav/sfnkOvTuEVZRVDeY732t/M2/ZCV57DH/zY/Xn7X+P5
94XxTOyOvvYnavh84jud6GJ8vtdRnmMeYUFq9JnELTzHPEJV9S+/K6t4ju93
d0Fl9acnf++b0hr1v9+L9dsZK62dcsTTcl53vaXLpxN3ODXZ1ylPfKRqQ2Va
Ol+uuPjO5nemF4gH7c/k4gJ43mpxu9OqlUVi/IIPsW8v//hoiTjl5LANJ+x4
7p1wW//3g1Jx+ArlzoFaPK/7qd1N004iVtwY7Ow2mM//zX7K5Ss934rPdFUf
/j6c1zPz4U69DwFpYp1T5xbYHuDzP99rwu5+ypliy1rXUambeO7X/9jYL05Z
YuW6t5sX/pduFov3Zy5xei2e2uNewuFaPv0JLwYc2pUXJ7461sel8AjPVYuV
NuxW/iIevKZbhsJRnqdvltmRdtZPfMlig+yFWX/v60hqvjdB/F/pmGsa3+lY
9E18yLhDlIENzzd6tqT4z0kUz8/zeHrZ8O99JglXH1UdyuL1wXd6bdiHG3eL
eXuMt1cu4wwPmv09Dz/6g0Ov+EDeftn0r40dfOL+amfwXXtr3f098AXPZ6/f
9TIidLfU8bla9Mbvc3vy9g7W/7x+2p4TF4Q+6zDMjs9PfMOF54Py48UHNgcf
mbCAt3/WZVG+3oBQ8RH/LjHdI3n7XytOHF7QNkjskiipC6nk+ZVufvcvuYaK
Z/+5Znw4gucXtk6b7/7yqzhgb6rxTZf/yj9rz9+1XHK4+eO/9j1ue9SyqEuy
2OueKOVhO94+dNyvfMeIVPFVAyex5zu+/qBdrXyzvSUukec7h7hVFoY6izvd
//nrTQ6vT474rGV2faL4UcGMyD19+fQftNf+0TEnQnx81m+joH/4/Og9d1Ev
bf9K3D+x0/hI2b/HgVk5BsYnm//LL5uzTT8zNPSvdh7jt54jZGWdd/7td5ts
bDckcd3f/ZqjTtrCkda8/YrP57pl5yWJ1VQUFvgo88/9snxhnzv/llfY/ktr
J6W1A9LaW2ntibR2W1q7JK39l9a+SetHpLWT0vopae2ttP5LWnslrf2X1u5J
60ektZ/S+qP/1/ov7TuSVn+k9Y/Svhdp7aS09kdaeyutfZDWj0trr6T1C9La
f2n9i7R2WFq7La1/lNZuS+vvpLUn0tofaf2OtH5cWnsirV+Q1n9JayeltW/S
2kNp/YW0cZS0/khaPyKtn5LWj0sbP0hrn6X1v9L6HWnjQGnttvLmVcoyoge0
vnznT4dDvVZH0DoF0puSsu+xSPSOOOy7GEde7rn6HXfmTsa8f/+d7CXvLk8U
ib4Sh/3AhxuGJ077yq1i3wvskwM3j/rXPyEO+7cfTur1XJ3MdYl92VMkSuDj
aex0tRSJMojDfknOHfVFxzK4J8zfoXgdRppqIlEWcdjLtWbJJE7L4maNPtNO
JEon++M9FTqJRLlc6//895P4JRaXA/ZI55uS18a6hbw9+DUWX+LrD4vG1tZf
fFyRuixZkaiYOMXH0D38j3hHMRfI1pNg/yjvS1Nr62/isB9l1i194bFSbv35
yxWtrblkP2/5vMbWHeXEYX+wt7NeTGw558D8NNgvWeBa19paQRz25TfO5SRM
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
n1rKpy1L/9brGJvEwjqq/wPZfHbo5ktB+qcbyI9TYfVUPdnf/XS/JvLj6ti+
nuQfb/eqnW4mfzbTe9Z3z7Sv4ooj3RuDC3l/1qjIKMYzLVVcbbCy3a3yt6QD
9kFcHueoUNgziXRoPf52a1p4irh85bm6n+GZpIMd84/2Cvw4Q5Z+wu+xTVOv
NJAOXVn6Yw2n55vdbyIdmlj6K2QnF8fKtZIOOWydobbX8YO2q0TUrn4aPN/S
0TdZrFHtc8BgjAy1q2GY59tzs/KmnCz1s5fS6srCPZPExz8lv38czPuzRc6f
0sM9f4qP1gYZxU7l/bhvN8499UzLENvutIkRGfwkHSLrFp/RccwQK2o3tsSO
yiMd8Jso8OMKWPpDsos6FarzftwXlr5+c8HUIj856l8iWPprv34+9uutPPUv
AWzfxMZdcdY749uQDgcvN0/y1fkhtmpfPPPNw7akgxfbT3HPo2/pI3cF0sGN
tesFt7yrHWoVSIdvLL+u67ts0gxIJh3GKlxclhb+77jp15C0yUb5pEOUiUxy
uOcvcVX3/TeXTCjn+wXEhRP4a/gdk9axecYqJdLBnqVf3mWE/w3LDqTDM5b+
1iS5yxkhHUkHI3bu4Jnuolb5f8f/0OHantgwz7RM8fId9+Yrz1AhHdTvmfdz
9M0Uuz6sqTh6WYWf3/h+/qSOY6b41sDD5nujVEgHU1+5gzqOOWKrh+v0DDNz
qLzdc+MWp4Vni69/VXLwe95A/WPRYXctR98s8bEeMs98VijSeCOK+TsdBH6Z
CUtf/6mffZJVN9IBv++UYzp7b9UgHTTYc/NuxVR2W6lJOhxl+113HztT+K5D
d9JBZHVppK9Otjjg2bDavbO6kw5r2T4re5NHGuOndycdClj+/yltmqwl0510
OGH/taujb554YnxaZu2jKtJhI8vXjsOh5pZt2tG4y0E85I5nWo74paQgceAh
NdKhO/NrTAT+lw9L/4T+yybR6f6kgyzbl6sYlzW67YkBpAN+97/1WJhuMJB0
KGL7e3t2ne+yx30g6TC3ZPnncM9ccXRYVK/GMQNJh69sX9m627sj7V4N4Od5
WP7FlQ+N5mT3Jx1KGwKueqYViMP3Wgy2FSnQuPT7BM/tOo4F4unZag2muT2o
vBuZX+Mj8L9KWDp+6/Ym6t+ypvLOZ/tyKx8dPT9h3TAqbwJLP9Tq1Py8yGFU
Xvx+kTunX7NlGJU3KmDorLTwfPFEtYt/Nj22pvKasP1yFp6X3q51H0rlDaxq
Y+Wrky/eoHTpQq7fECrv+PurjHx1isXpfTaZJD/UpvJayA5XcvQtEm+5Vfrc
sdSCyvud+S/3BX6WE0vn16IF3/OtXCn94EU2keGev8VK6hPu1FZNpvR9w9uf
80wr+Ws8v3D29Slp4cV/jectpPg1t1j6wvF8T8F+WhrPCJ4LfeUF67DQeWO7
pLU6jiV/jefxKxzPt9Xo4JAW/refwrH3ICzXCSl+irwgHZRro2D9DuX6vTxF
x1fnbz9lgWDdEOVKfH5DxtH3730g2CeYufPzanXjBGoH4ln/e9luqMLCYT9p
XDGXlW/7VXuv1jx+fhj7+37IihtLW1MonWOs/7pxe8mMm845NI69zvq75j7/
iQcFfkMQJwrPPcba8+BTMkozLePpuZqs/R99dlxk/xFZ9NxA1l+8Hbbxxe9c
Pn2cawtmcaKE/B7j8BeQTkuibNZ11zri6B/3PL+YbxXXQPksZu2tKOKg+4qF
qZTPDax93jriiLn9uhLKpyxrz/XNV1hp5tVSfnDeIYjFlRLy24wjP0hnfEue
k9d0OeLo1zo+V73ZLb8N1VtH1h6G9Xm5IvdDHuUzkbWfXmdTB/XqXk/5nM/a
2xFvQnqIjstTfnD+4gmLQyXkHOPID9K5fNLFOWpFZ+Lod2583Pto8D9dqX6a
s/at+XfKpgkx/PxYNGsPUz2iGp6eUaPnUlwCFp9KyCcxjucinUn2i3Qnz9Um
nsTaZ+v+FgUXJvSn5/Zk39OYeUoPzxUbUvrYh9yfxacScjPGkc5m1s7kzR6Y
UBo3ieyF+0OkcaSTLPiuYb9Q0A6ALxZw1IdXbB5A5eKxZT4KEeSPKLH5hPU6
M/SOB1QRf8X8+vKdk3+/Cef5auZfn4lPf1CvVU18CvOLwxT666q7VZNfcwT7
wXdnVJ7tVkN8L5tP6L/M/XJnB56rsv0gkxbPGXjqFM/dsF5ndmKakUot+Uf9
Wbl2Z/Y/9Pwoz/uwcrfZniHek8bzsCzl/k6+YeJxcyeZO8r/IX6AzQNc7a88
6/XnPzSvosXyU6yw/+6FHfx+A2eWn1UO/Z1X5/O8LfaDa6rkTzyXTfwD88d3
t31zMHJTDo0/o1l+ZPUmP7PZys/PrBfMz8B+N8vnq/tXtw0Ykkf8+6iR9k88
Y8Qrm8I8gq/wfk0om/e4wuY9YN/A5g2+R46v8RzMz/98ZfmZk1bXZdklfj9D
Jku/em70TsuO/L4FM6bP4bjOqtviSomrMB1UbgRrZ0zg9y2cRP1puF5t0Iaf
l7D90+lbWvhrse/j3c6WWpXkP8azeR4dFncLvIJxXQGfz+ZPRCweF7iXIE4X
6q0Je27voiWXV3vWEA9g35/uyLTZnoV8PRSxcrkmz+itn1JL/At7v/abyzbe
zefrVTzT7bKBxHnCsDrirUz/hco6Or8q66nfsWT52SlyfvNuWybxCyw/A+R2
Wlcn8TzknVPblWmfxaMnaj8cszSL+CE2f3JNw18puomvn9tXZnNp4bHi2dEz
Z3bncvl9NTgHPGrasLcW+VRPJnbdusnR95N4UhvXKw9rCqhe6Qvup4D9UzbP
s8X0q9mkM3z9cWPpeLR1PXFIvpzqyUGWn9TjElXDrpVUHyJYudLuOY71tKim
9+jB2jl3Fk8MfC3jnozjPd5i6cjrjnwd/O97AT/K9NnjsU9s8riO3uNGlp9O
Lt7By2bUEw9k+vikNYV91Wyk9+jIynW0fO+PQ88aiEcxHQ7fm+5jcaqZ+tlQ
lp9P3JLlp2W+E1dj722qy8o+Ly+k0DgBv6osLhn+Xs1+uwi4AZt36sXilYEP
EsQxQz3Bb/L+LW/kvHKJj2HzWnePiOrdpudRPWlk81Ryj2aczzYvJD6HzY+N
6PHitNX6YqoP2Wz+KmDbMedpr0qo/sQL7t2g+WrMv03tnnx7OT9/WMDSaamc
Gmiyht9nIurzn/wsur463bOsmsY5OCe3dcs4SV3wF9Ihn81HzWVxz8ALBfHQ
oEMcGycXTpg+5JJxEXGZE/+Z79o1uHzLvqBi0gG/9l99N1ueKyWuyebNjFbs
iI/uU0HlvcLmtSKerj3tP72C9DnG5iefsPlJ2JuyeblVi01X6F+vJn0CWTpx
VY+GnLOuJX2i2PN3SO52DVpUT+PYa8xesd0s+ZIjMaQD9ku8YnHSUN4jbJw/
V2+w223VCuLP2XyXZuj7V55zKqm8a5i/cKf7hTSjN1XEE9m8meHr6QWaMn+o
XPiduzhr5EbzWtLBkeXnKJufhN1vNi8X/n6OdolcE+kwn/17uzOXAod4NlG5
sP/hMYufRu+R8Y1xsbkhP6spnxrM7+AWx3fq87ORuAOb75q4d/J4p7Yy5A8e
Zf5LncKq04NzWij/siz9H2xeEfYJLL97Lx/qtFymDY3fKK4ai5+GfIK3jV2a
an2/lfKD83d66+yU7qS3ofU1xK+4+WWKR6wdfy4e/kVlJ+PC7f/2y3gu1vd/
snho9H5xH4GCxyVNZSVKH+f7iseFHFm0tAtxnMsOX7W0TjWJn4+Cv/DmyEW/
4xG/6TsFX7z97gafCL6dBF9/cZ/vcqe2f/kdzwT+CNbfh7K4Z8g/xeEvC/+6
41B3yifOIT7rLD8hpwu/nwF+xA6XVYsCP7dSPulceaedZtc/d6LxOXjD0EDN
htRuf/kjDgI/heLSszhmlE/WL8WMb9c1Xd2K+GA2b5Ma/MQt18iW8gm/40u9
z58+v9UoP+B209bnJ602+ctP0Rf4L1i/lrD4Y3juJsE8CfgpwXwLzZMw/yW9
7QKvF0uHUn7A+6592udLh6n0XOE6MvllAn8HvEwwH4LnCvdR47lCjucKOfpr
aeu52O86etSlizIi3m/CftoZhj+v5KXx+2bBX4TqzqpbWEPjAfABQz3U2xfV
0veLfacKWTEncoyyqX0DTxgjWz1vQR6Nc8CXsDhdyA/4+IlR/bTf8f4XuOnO
WYnzFvB+ELh6aMN+/4Y/1M5gH2lora1j/v5flE9wwwfpDxwUcymf4EHLNmoE
HyqgfILvZfG1kE9w2wWd7Orf8eNn8KYRP2pvH+LHyXQ/Wvc7wTOdGqi9wj7P
6yyOFvIPvqyLcUJi1xzKP7jh/fiDIk3enwKvdFo7wqAXP4+E/ZMuLC4W0qf9
ooPeHy9SLKD0wbOMJsXuSOLHw+Cq55bva/+N73fQz55Zc05zwGp+nAAePjDL
MseuktIBv9StLtNiUg3Zo/8y+zBg+QrlerIHr3y1q3TA0GayRz+i1eL0I0pW
jtpDtPOtJ389XWetQhzt51TTXQVmyfy8CtqxN3P7vvW/bUz24GscD12e22rG
f9eYZ/7naYfE9058+yZoB5AO5uuOHVq4oK9XC5UL3Fal3Rv3FzL0vaNfu9Ac
0Mlmbd1f82w3BfNp4N4eo4wy5svTc8EnLtryYsRaRbJHv9OoV3nF7ZQq2YP3
SnYct9xJneyp/Z9keUz3Vz+yB1/j7h5bnzqA7NE+qxcpnlzqPozswbd1LwxN
Wm1L9sL5InBh+4Z2DPNvKk+Kjgz/d7wNjnWQryWhsU7+MmSP9YKOs3yq9T01
iWOeX2Wmj8buYD4/v9n6SJ+XvvdKZxuS/QvBPDm4cF4L5V3E1lPqWbwj8AWM
ZzGO57a5lfAq3LNQ7HNisvdTbb6+jWPrFyczMzucKLSndI6z8+mfWLwj2o/E
eBbjpCdbvzgiUv9acn4y8duCdQpwaeWVZ/m88fJ9oPNpZeKYb3w47mX7Nae7
EMe6if9Zs6rpNXrEMa8YMHVw4bl5gyn/wngj4FsE6wtob50EcQPAtwrs0Q4L
6xXSx3cdZ17bHKo6mbi0eU5p+8GE6UNPaf1yEFv/iupx1vCZ6R+qz5jvHWxV
0U1lBN/uvWBxM1xYfBtwjvFhjFO9EqzX0HqiYBwCfRQF9uAlAns89zfTuyuL
HwJexrgV4/AjNrN29QFbl0R7iPW+PasPb3N3nkwc7UYVN8F/i7EdX3+kvN/5
gnU6GicI6jm4sN0GjxbUf/ydKuV7l9b+jxPUT/AJAo72X/heaPwpeC80Py+M
c8J0Q71yPZcX00FRl/TvyfpBO7YODnusL4cV73vzrN6cOPrB3dm7ZpTqWRKX
Y+1A6ARv77XH+PfYi7UDPjYy4+OjbWl9MJrVT9ONOybv2uRK64NmrH1+4L1n
poqJK60PBrH3PnGqZ7XfbBdaH8Rv1+4jtDq1TqXv3Ye1e23fViZt7+ZM70uW
5dM2rKfdu3HS1y+Qz08vawO/mf29/1acWPn9cgF/zprmb01G/DPyHs9p3+nJ
Zb3vby36q116ZL3HevC0or/qVUbjx401pkV/vceHN18/H7v/73Vn4XlqzBu8
NItJ+e1V/Fc96Rf0qcky7O92THguGN9XYc78V+kf/+4XWhzs1WKGlvxVnytu
bZeraF/yfy2XNB2k6SZNZ2nvRdp7lKbP/6vO0sorTR9pOkt7L9L0h9+Ff9fY
vXV2QkYkxX8jPy+42/pxVtsoPjb4+jEPvb9l8PeYg5fr+M7SyufvMQfXvfmx
+WsGf485eIif7Be7Ffw95uDvXXr31crn7zEHz1Yf7l23kL/HHLw1yS3mawZ/
jzm45vl1Xe/N5O8xJz7ofajdCv4ec/Cbx6anmejx95iDW5bmymnl8/eYg7+c
uNZQ6UYt3Y+GeRG5M65TzQuiSE/wSPtj24InbSc9wdVHpcw3K/hEeoKfuSR3
VDeEv68cvO+5C/mmBemkJ/j39+f69u7M31cO7j928STdEP6+cvAFr423GYzj
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
LOJlQ7eVaQljHA+MlEjYfB241YOzqx+tGiURie5G/Hf9EYlK/qf+wP+idYox
Y+NWlbWh9wiuGj7hvndZDafP6jO43ufM9c4DbSU4Ry2s/zhHLeQYNwrLi/Ox
Qo7xgJB/Z/6mkCPOOPVf7N72WwJuIrjPnfzcncFc7OBRkgVs/ERxc9m5VPTj
wnJhXCHk2E8l5NhPJeSYD/mr3rL1C+RHt1XD5/FjF8l3phu995zq5lke0yWI
40b9l+u8/J3jppDfLa3eStNfmM9TE/2nek8P+MvebMJ3UeaNv/XZMPvbPi/7
5L94oeznuq/Tkv5/20t7rrR8Im4+/O7zC++eHVmTz7kxHWg9KG/XsbUljznE
06c4Uvt0Jp5wKeAQXx7841ePzo1lxdwl1u/Db3KOObM1VyGMw30e4HFLo7Rl
9rznEJcfPH9Im6vcsUKaVwefkR6T5O3+m+bP6fyX7UiFU1fLuVT2fuGXjXq8
w9R8diiXzuY9wKdNm5gyY94Hbggbt8A/mrHT7Hv/LQ9ofQ38mV259fvBfzjE
FwAv7vB2yv279RziYVG8gbLjE/qPaOQQZ4rO0VyL07cwaOFOsHPX4AuDFeSv
HhVJEI8e/ktgnOquSxHNHOKzg3e6NcV0QohIgvPq4GMLNLXH75SVIN4ExQ0d
mKU6zllegrgS4GHuwXJOOm0l8qwewC8Yy+4RyGf1BPxxqLHf7QgFyVhWTzA+
H6VhJopq84uLY/UE/GvgwKGPK1QluCcAPDZ53Y0uT9QkPuz9od9fzOLSP2H1
AfzbbKerzdF9JLhXgOx3iob4W/WTIM4+eMP18E/DQ3UluG8A7V7Bar2o3u/M
JYi/T/s6/tRlLplhKUE8evDUbe/ahBRZSXA/AY0HlC4+L3Jwkqxi6yDC7w73
Fgg54vgLOeLaCznivws5zu0L+QzElRX6g2x94a/2jdW3v/bHsvom5Ig7L+SI
FyDkiJOLep7N4pAjHi742vTZnvJxPzkNVg9RP4+xOOSIe0txGhTbjzlWlMoh
ji34mPl17rEPcjjELQXPD1tuMjssj9MX7NPrx/bpIT4p6rlyfZtng+bWcIg7
SedTns3b/0zcxB1g/Qvqs3xk/N6nHjKSVuZHgH94fXKjXXJbSTiL+0n3tbac
vOa/qJNkhWA+3JDNh1/GvRWsvlmweNRBLB3wNXO2mF8aaC6JY3qiPvRvHqH2
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3n8FlP7x++575m5p1TaU9aE9lIpQpt22pWUtcgWkjbRRotKm31foiwh
JVEqa5YiItqEtHqQfX0enn6fd5/zvH5/nO/1mTNn5p45c851fa7lW33gkF5X
53O53Jg4lytItk1yuXKS1+rg/SiXW6p2pdpGtcFqC3SuaTGXu0r45zSX2y5c
TddelOVyW4ULwscJbxD+U/foInyc5Bhdl+nc3cLdhGPJZrrHiWpdddxMD/FH
5Ps+pHFPqa+K5F+SV6jvScn6GrNP+DK1Drr/1ZJf63krqD9RG6LjbTq+T2O/
1Pky6jso7/Fr1C4N92mnc4OEt2ps+6L7PxOup7HfCV+i9mLq51sqeb+etQ/P
L9lAfSdFfodPdO1f6uuqd5yncaeqr47kuXruU4Rfk3xSx/U1/gnJWhrfQvgV
4Qt1rpHG/MLzCbcVXi15idppwm9KPqSxDdXa6PhxycZqvYTv0W92l0wkx+qe
36t/oOStOm6t/n/rnvcKnymcSg6Pfd27kvN0PFC4nGRbXddc7QId19D1TYWX
6NmeljxFbYD6F0ierHah8NEac4LwYo25T9f3Vl9R8lrdt6fwO5KHFz1HT2nM
xbGf/Q3JverbrDZK7U+dW6r+zhq7Xsfnqk3T8b0a94DkeskWuu+9whWFI73P
eRpzN++u4/slK0i2LPhbVxL+QvcqJ3mivkVj4XM0vrd+54+i7/8l30fj79H4
SN+6rfrPV/8O9f+aM57Osxb8LMdLbtS574TbSH6u9pPwGZLb1H4UPl2yROy1
PV3yVD1nd91nn457Sv4geYNaD+HvJa9X25oat+J76ZqZwh/G/j1+t7Rwa507
S9ds0dhGwr2Fuwh3FL5G+F96/ir6rXJqQ3U8Tv0/SF4sWUl9w4Rf0r126Phw
3W8Q61NymfoOk3wv8n0Y80di2VVjb9G11dRuVvsm8R78Sv2/C7/Iuwu30blC
3ntkm45L6n4Ndf8ZkuM05gPJz9SfSNbMPGdnRj73As+o9kzOc8M7Mj+NCp77
MrrmN8l+6p8h+bnuU4q50X1+13H/yPPF3PcSHis5T/J4tR7C8yUbRV6L83XP
iyTL8x3V7hA+WXK72mPCHSS/Upsn3FFyn+b3QfSG3vVLHT8q3F7yU7XbhZtL
fqE2F/0huUHtVuETJT9Ru034JMlRqdfwF7rPJh3fKXwKeyT1Wn5W7/JO6v00
T2PeTb3PHhe+OPVefFT416KffwHfQW2o8HO6z8rIc8p8Dk+99hfqniNS74vP
NXa1xo0Xrin5ntpk4QaSa9UmoUfR7WpThBtKrlGbKFxP8nz0oHB13a+/cC3h
w4XPEa4tfITwkXqGsmpH6HiQ+k+QPFb903X90cLfaH30Vf+xrDf0gHAT4WOE
p2lMdeF/acy56q8jfKT6V0T+rnzT89RfV/Io9X+U+Luwl98RnpXzXnhX97lJ
uK7kO2o3onv5VpqPn8M+ujP23j5Y8g61X8IaWxV5nbHGXom8tg7sw4Lv30Ty
+6J1/h36zQU6Plu4lOTTav24v+QmdIjwIxrTX/c9WfhVyZvVrhFeJ/myxk0Q
riVZX+M76vfW6vk3Cv8HHa1vtwMdgx6UnFuwLMPa05h/S/bSmJ3qO01jzmMe
C9Ylqe7/hu7VSv2vS07W8RD1v8+e0bVd1X+a+r9l7wpfzTrTtRejPyVra0xL
9b+mMVuE/6u+avqtH4vmA4cKH6q+q9CZsXVhl8i/UVX9gyX3c43alcI5jTm2
4D1dFD5dY7/J+RzP2FrtnLCOWc+HSb6ceHxLPcOs2LqRazfF1hFwhtc0bqTw
0ZKvqo1gfUq+zn4TrhHminm7L/HcMk8Pobd07jLhQyRfwRayrsK3+xsbpndc
JTmMdSi5Ijzb4dh6jWmvZ26qZ7s+9rceIjk+9p59T3K9zrXTmBMk/0ysY+/R
dcsjzz/rYEViG9FKY1YmXuOthZdFnlPmcyU6gv3FularKPyp9khn9H3Oc52P
/S0mYs/1G9tYM5J3Zl5/j+qedwifLfxIap2Gvm2iMV3UtgiPkDxdbZPwtUXb
EmzBhcIPZ+YKK3Xd4eqbE3kfotP+I/ltaj3zb/YvukrtCuEHgx5jruoy97rP
er3Da9hh4beEVxWt3/Zq/NupdSDzVkf9v6W2Y9ivAanf9X7d86LUa+dh9GFq
fgfPmZ94zpjzuzLzrfnC92TmT8/CTzLzqueE/6tWStdWkTwxtl5aKnmLnqup
8K+a54nCxwl/B2fUb5SPrNMaa9wx6n9BMlX/QZH1Ui0dl1b/bo0/Qbiy8FaI
NDwkst57LPGeayJ8vMZUEt6kMQ3gScJLsMWp1xs6/pnMHOg79T2ReO2w9p7I
rEdW6N43pta7h0juVysTGdfRdYep/3nJosaVjqzD6+m4jPr36HezovX20eo/
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
fq0xbSTLZf7+t0Z+nx/ytq2tdG6v2obI3Jj1fltkW0W+A87/RNCRG4KerBje
nX2Lf4sdOyn2e8AV74/NgbCrp8T2VZhnOCR6nTwQuuOw8F5RZA5LP7x5QOR3
5HsPDX4HHGZt7DjnsNj5hoHCE2LHTQYIj4ydMyBee2lsbgpHbR87jkY8rWPs
vAX5iyvoK5pD4sc1LzrOSYyLGDoxvJmSpxaNidWfUjTPJFb/R968ok/s/MDi
yPE+8jMPovvQORrfVucrZn6/N8K7f8P+UX/nzJzu0cj75K+ix+APwSnhlmfG
5hPwit6xOSXcsklsvghvbB477kD8oWfsXBE5o86xdWch8ARi/4ui8J55x9AP
2NcQp5oaO8dDrmeEcMui489wY2KY16mvW+Z48k3CfYR/Fh4nfFjmfNSzkb/N
mtjx56GxY1cLI8cgWhTN3+D2w4MPCF8lX/RU5DwQeaEnIz/Hx7Ft9TfwuKJj
1eRQ9sVeTxvCGoYLfiS5IzLmGnI/PP9tkr/AsdAFes7f0H3CtTJzcTj5GbHz
T/z+qNg2WcNym/P2Q7FJV0rWDfv6YJ27KvU6Je9zZWpdQm7o0tRxSOKRg1Lb
z+XCd8X2a8gt4Tc/wncoOP4/V7htwX7zw7xjwbFo8gLNJGcn5iHEFmYmzhni
M85KzEmIP0xMvI7IqT1QMCcpIflgwbampOSkxLqZ3NwxmWOapwrfkjh3in86
J/E+Ihc3Q7hLzjHh2xJ/E3KOX6Se19eJf6TOob0WYgNzNKYpcdHUe+jVzBwR
W/l13vqfeFE33W9c4r1Cjg/9jx3oTn/B9mVv3lwI7tSOPIDaEtZ5wbwR37Z7
wfwSntlbcnxi/kac5/bE35S49ITE/JBc4mWpucbbiXNM+K3EUz9S/zT0R+b4
7Y3qr11wPpq4K/HXT8OaZg1dkto/Xab+K1LreXJtm2PnIMhpbYmdZyH/dHlq
2/WWxh+j9rxwD2xLwXa/ouSTifcQsf3BiXUXftMViXUa/tHlifUPsbID6zFw
s4WpeexNOv906vflvZ9JzYFvFH4k2Hfs/EOBJ8AXmHfmHx+wR2KbRpxzjM6V
FN6OP1Jwbn893FtAw3KfCF8vrCnLbRMeVrDt/kB/RhQOhPJzH8PThUsIf5H3
esB3+BDfWri88EfCY4UPYk/hZ6TW1bfqR15OvSZZmw8HPgYvW556X7A/iNcT
tydOQrye2Avxk2FF5/qJSz+QOG9A/IRcC/GWzUXnydBXxAOfKpinVS44l4Z9
IU5Pjg0bRJzw4dTf4rrE8S34WyX2cervNVr9j6fO49+QOBZIDGlu7Fw/e5a9
S20De5k9jV1g3bJ+F6TWS0OFb0+t868VvjO1zh9G3DSxnsfPrRvZfmO7H0vd
fz38PPhr+G3YXHK7+JO/x45tPBGbjzTImzvDO+oF3t4r8CL8gU6B//wSbD3c
hfgR8Tbibtj+faEfPjMonOOa/41jDGsVHcp65Vl4JjjAlSGeQFyBuFGL4Auw
kMDwfmo6moX3ITeOf4Ju3R8wuXK4CfyMmMVWOGDwn/EX6uQdK+EZ4Gfo8J9S
844T+KaxMTE8fLudkf0ubA2YmN7YvPnhBXnfm9/guYkXbQl8hrgK/eTBZ+Tt
dwyR7F70/fDnSoRnysJzgaF/5GAY35M4qtrqnHHTvN8d354Y1abAFcHErRh3
jsbtjuwn0rc39H8fbCi2dELeY4YG+789cl6HuCgYO0teh3chRz8q3J/fGh/e
fXre+R6egboLnqtp+C6zi45tEnPYVXAcoI/kLak5KnlguCvxHHK2Nxfsf/2o
a6al5o39EnNXOCq54qkaczzfKm9fi1qXn4Wnp+ZIl2rMjNQc6bLEvAvdiI6c
mpoXXSL8aOz4GDVGdxVs7wqS1yS+J3U0N6fmtGezr2N/W+oe5hRsp/7C3xZu
Kfwneybxs1GTMyZxP3U+IxM/D/Gi4YmfgdjdiMTPTKyJPQY3+yOsJ+aWOb4m
dd+BWCy6PXx34pGHhv1CTJy4Dz713KBbdseOVROzhp/TxzF7+IOw19gLW8J6
Zf8PDWMYTwypdOCKjQvmxuS72btlwl6Gj5cJe5/YNzFw/KBhATO/yMoBc+8q
4RnYm/gPXDcyvA/vjL9O3RX+/hNBL+2JXYuEX8TaI9bNPBBzeCtzbOWfouM7
7NVOIXY4O/LaIj9DzpfcLz4JMX30Fjkc4j7kB15JbN+x868mrgFom7qeB59z
dMj/EOshxk+cnBj4A7Fj3dh0bDt1QTvhjBq/Rtd3QIcWnYOqgm6KHZeDc09R
/736rct1bcPU+QvmibVJHg1/GL+OuA+6Af+XuCuxWXzmsoFDwiWJexO7/iy2
HaT+6piibSV1VscWbUOpvzquaNtUW/iQovkA9S1HFs0ZqAc7qmjbUYdvUzR/
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
1E58FZkv8X8f1NdRj/x/NhGdQg==
          "]], Polygon3DBox[CompressedData["
1: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
k/Ad/V0tfLSOWWr/qd9Yju8rmDPVzf2+x6jvEY2fLdxRY+7Sb3yvufyl9i2s
3YI5EfuL93uOxj+MPdXfC4TP17gmmXkOfOfIgn3WLI1vr75Ux2i199CxtGAb
O4/1nUf+qLHrdL+dha/k+8Kx1D+4ZFv5mo6tan+i3xsFn+Oe+r2fhb9j7cMX
4Py6/mf4m85P0v0K2Bf1DWaNqn8j88Z2xPgCe9pU/Ttp3HqN/0V/Bxa9Zlm7
vwqfUPSaZ+0fIXyG2o/qHgN0v7k6fiqaQ8Olt+i4Fv/He2F/6OiQOt7IdH27
3Pzjcp2bULbN/FrX75fYlhL/MDd85sdq7152DFNH/cdm3oPfCO+feG+yf9k7
Q/HZel+/CX8q/J2ufTbyrY3CT+rYovYdOqrp+h+iTeOd8e5eFH5P7Z0zP1tL
4hJsR25uXw+fq/uXcsd2+Oi5wjcKn6Sxjwj/pXZ//LTwyxrzmdrzc/M3eNwr
ZXM4uFx/Hfuw10rGjCGm2JDad2yM/PAjHSPU/iTuH/YTbXwevm9U7u9b1L2e
1/1LmdcGPvJP9XfIHUtdofZEbKn6j1f/CN4pvjl3LApHmKPnubhkX4/PJ1aq
pGsOSm2/g8Y2yG2bTlH/C8H7kv05JvF+flDHArgMNj71+6um9mzd90Hda53O
LRSupaOz2u/reBT7C8fkXjoWC++rozs2Ssci/L+Ormq/l3rvYwN2UvtA3f/2
gjngo5pPVeGrhQ/DJgpXEL4Ce847CN7vtwn3w4bE/bes4Jjksvh998JWaL4P
wL+Fr2PvqP/24PfLt36m4P23t/qvUftwYhD1Vxe+VriN8C3Cm3gG4dGJ7Q8+
/mO9370T+/4JuWN97nm+2m107kz1PyZ8XOQIG4rmGHAH7Bz27jLhSmqfV3Ls
QAwxJdjuYn/nJ+Y7R2bes+zVY0vmLPVTx+9wGTjZG7p+j8Rc7XT1NSv4nb6g
dsfMPA0bNDj60I1F+0R8KzZ6S9GaA7YbzvSpcLXEXAofu0m4SmLfC8dCg6ie
mHvBqeqmjv/hWtht7PeUxHwJn/Ouxu+Z2Bc11zu6V/3XY581vktwPNsoxj+s
z87qv4B1VXZ8tlL9Z3CN2kN0j1qJucoU9Q8WrpmYW10ofCB7SO1vdW6T7n2Q
cIaNFX4nmFPvLPxjYq5NDLqH8K+JY1NirArCOxLHXmdhoxKv3bnqq4ePSe2P
mmiukzKvnRN17qqyYwK0BmIQYoVHS9YiphIzCJ+to1HivTFPYx8Qvl/HAbxH
HZMzr71B6l8ifKZwg8R77ZKy4/dDWVvCVwhPzLxXBgpfKTw2s+/pyz4WrqNn
aJaYg8HFhme2xWhJl5Yd46P1EOMS+zOHOiXHFMyNGAptaFHi2GqsnrmK7vUX
nDc45iD2IIa5L3OMSax5PPaE2EvjK+M79b56qv1CyVoKMRex15yiYwViCGIJ
9hB7CZu8HO7FnBJzwZm69yfBvrBQtL5EjI42hCZD7I5mgpaEBoGWgkaCdoXm
gnYyIrOeBvedqr7x2Avd61zd8yi1x+moKjxGuFtuTkYsTQwNVzs38/s8Stdf
VnZMibY1LXGsWSV4b7CH2Et7But17Bn2TuXgvYUNwZbMRhMQvq5kvaNasG/E
p+Jbdw3eq9gQbEn14O+HD8WX7ha8N9nT7O3dg/cae5a9u0dwfMceZC8+JHwo
vly/d7Rw12C96eCS9aMLNZ+jhZeUrF90J14SbhzjV74p3/b6kvWXvpn1RLj7
RcI9hJEAJ6o/F64UbCuxMdia8zLb8t4aPx9/mjteIm7qAXHUsQbbouvfKDsG
JRZljmgj2AhsxYzE2smHmW3DdfDEsp+BZ8GmoI0dl/l9NFH/xer7kzUF907t
b3kmno2Yl1gdG4vtHly07cWGPy48pGjb/gE2Fu6v6+/Wtf/ofqtZDxr3OnxN
x1qeT/hNtZ/PrTf2Eh4R+SncBA74M1pNbl+EZvyj8C7BvgKbjm2vEbxe4VBw
qR8yz+8L3e+Fsjk+WgyaD9z/XN2vUtExYle1x6BPCf+p/km611DNu3HBMdrT
2DEd+xcc0z2TWrPrWrJGhZbXR+fqFBwTPpta8+ym/lsTa6HodOh1BxWsKfZP
HUsQUzyXWuNC61qeWPv8qOR3wzv6XPhI9fcRvodnEj45Nx+GFxPfEqM1ipwW
bjssN/dLdPwS+TV6w0VF+7oR6t9esD35NThmaxg5E9ypLWuWuFzXfJmZQzXg
O6NZ62879fdT/33q38raiXzkcc2nStkcCv4DD4JbLcv87ldFvegN/WYv9c9Q
f3XhN4WPEp4Jhy5bz8KW3Bn1J2z/SOEHS/YBcGT28/SSv/crur6brl9L7Mda
zR1/EYfVYv3mjo+Ik2oKn6q/TQvmSM+n5uzwOXgdXB5++EbkI/B1NKRtkS+S
K0Aj+iryeeIBNM3XIr+ATxIvfB35O/H88NTxKJrF+tTn6JtXsr85Rb//vfpW
YNMy6z5wWzj6jKI1crRyNGpyI2hEaEVF9kTRmhjaGBrfPZnfMdoc74x3j0aP
Vo/GtyrzO5mmeXQt+F3xTqak1gh4V7zDWhp/buJ3i2aIdojmuSaz5on2icZ3
t/AU9HPNY53wcLXP0bFz0Takc+410Sk1X2atLFBfsxhjzyo6BiUWJVZ4FW6R
OV6brqNt5jXyt35vW+K181f0f3B/4jnWCFolGihrhzV0YWqO9Ga0H58VHKN/
p/6NJeeqbhJ+O7NmWjH6L64nP4PvXCr8ZmYf8B/1f57YN2DT0da7R/9NfFKB
byY8JlizrRD9O1ouGuyPMX5EmyWH9Yf6P0uc2+Ie3OuGkrkBPg6bgYaP7yNH
NTG1vkHuCh9wsvAhBfsGfBBaOjkzfNNPwbaTOHqt+gZpzLaCNUO0Q+JG4kdi
MGIxNOidSvaxaNOnpOZC+PA7gzX9zuq/ObHWj36G3jauYI1qSbA96x/51IBg
7gqHbabf21t4n8Qa2j9q7xXMT+dEfl4zmL+gueEYyaFUiprOL7lzOuR2BmMf
c+eIyBWRE9mUO4YhD0nMSmxDToPcxhDsc24bhq3+pGTbVi+YjxLT7AV/CebH
syM//z2zVoONZD2TAyNuJX69XPi81JrWKbpmocZ2DM73rY18F01mfur4BK0G
jWhxag0Q7Wh42ZomnP2T3JpO5dSaAloPOaIhqfVAckfoDcT25GDG67daBsei
q+N+XVOyrr4m7uejgvODaMJNc2tKc1PPEa0JPRKtihzNhODvjc9rH3/v6Nx7
GQ22d26ND61vVNHa5Pll5yAma8z6zBy9R2pODncnBuiW+h0TG8DJu6Tm4HB1
cnjHpNaHyO3trzkcnDgmLuv+B4QYywrvlHtNsbY6JebucEp8cofEXHNZsLaL
xrt77hxdv9TnyN2h8ZOTRs9A+68bzP/RoCrmztGR066XOHd3UPBcr472ar/g
eIQYPc+do5mQOkdA7gbN4XO4UsFaxGDhFiXnfN7KnLNBgxyaOJdDTqlejHfI
Nb0cnD9CUyOXiAb9KzpDYm26dnB8g4/CV10XHMsT01fJrTmQl0XDQYu4Jvjd
osFVEt43OD7DJ+Ob0eB+L/p6tAFinF6p9zuxz8WpdVL00ka5NWN0WzQotKjB
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
          "]], 
         Polygon3DBox[CompressedData["
1:eJwt13eUVdUZxuHLnZk7Q1OQEsAoVcFFkwAGLKgYQESkCAiDSjOusCLYEGwE
pKkoRaSKlNCVKgxIk65BMYAoHaWEkmAJGhBZ0ZU8n4c/3nX299vvLnefs7+9
b+Wej7fvm06lUisph67JpFLDs1KpW7NTqfLifPB6bDR2O3YD1hu7FhuBNcEq
YF2x+TSPBmEv0X9yU6k59BzfYYMcotw8dVgD5eK8FWms+Dhdrc1seqpQKnUW
v4+K6bsadh2dyk3GifHuEN9J/8TOYffrrwdVUt5pjJbmt9W4+3nW6u9mvvHq
HtF2Hv4s/h22HuuLZYtz6DCWopHaFIjr0VB9reProyotzqJDPIXoNb6V4pto
ON9Rmsz3d2P8A7vI8w69Iv7e/Oqq66av76mjuCdVVt5lzoM826ifzNtN27Pa
NdHf6qyYYCr1mMdantuxNVih7GROMbcfqJO+elEV5d36W6D9y3znsDp83fGv
sZ7a9cpOxooxv8WeED9J3bAx2DdYX/Hj9DA2GnuQrla+HqtOp3naYMWxGvFt
0Bnsf+b3qnVZIa5Ng8Vz8b+YyxlzqcjfXrs8bBzfGp66NIRvFP6Q+lm8P9Hn
PEeprPpp1Jv/CE8+tobvc+wcdc1N5hhzna3dJfoCy6U3tFnNU5MGZZLvN77j
puK76F88Hfk7ULGc5Ns8qVyf9wzfI56z8NlUEO9TXVl6VN1EbDEtolXqluOV
rP1C8bu0EnsPq4gtFS+h97EVWGVskvJ1WDtxgf4uRH/Ge9S8ttJMc6/Ecwut
Uz6IFaMvow9aoF0Z+qO2E7T9DfYW3waeZjRKX4uxMbGeftdtfH353qNltFpd
gboq5jKX90FtNtHb+vituqXYn8Tb6K9Y5dinuUl9+FrSWJ7y2FRso7gFjcaW
YhP1nUX3GndgTrIPYz8e4ClCR8Sb6TOeO2k63x6+0thkvovm3DHevf5KRH/Y
Bex+bAp2FTYJ+xHrgE3NJHOMuf4X640tw37BCuu3CI3GZ4ivoAl858Xt+Cbx
NcJWY3vFI+hCbpKLIifNilxHx7CfsBewBeJr6AS2hfb4DU1pRnybsY/0OUX9
blrOX59nFpafnaxVrFkFbCbWOTt5b/H+ymHzaKi+vkkneSbyzXwahn2LvY6l
45sLjpXOSvJb5Lkl2NjYB3xNsD7xzrFpWBHqhI3Atnnv9T2f5DtVKNlHsbei
PBjLp0vqB2J1lNtre8Ece0TujN8svpE6xjv1G9Zi74urURtsD7Y5k7z/+A6e
03aLuCE1U789k5wZcXaszCRzjTn34Vsl/kB/27SrTjWoa15ypjyrfIDvIDXF
6vC+G/uXukQO1d8mvl2xj6kBPcTXUL+ljNsgOzmP4lyqq+1C9cUpX9spMR/s
RuUf1D/Mu0D8Dr6APlFuoY8dnj8bI40Vykny/iHP/ng5bSZHnuX7WjyRr5q6
tsZYwXde+UdsBs9R2szXOdaUt594O83HqmNF4+xSXofVp2E8y2IP6qtwrL3+
hutvA/aRuCGNwbbnJOv34eXfH+tQLy9Zl93Kd8SZTo2w3+Um32d8p+PoK2Oc
ou7YRHHJYDwbaWec+9RD3Wmeqths5V+s1WN8BdgKYy+nNepW8lY1xtlMsh6x
LqWor7he5EdsV+Qq2o81oD9gf/Oco4+5Ock6xHpk9PUM3wfqqsRewn427p9j
f2GLsFFZST6IvFBSfBX+PHYEK2xdWsWZdXnvr9eucex1nsLYm9hacSt6A+tE
e7VtTOO13a9t40ySvzvnJTk0cmlJbAC2L/3r9SHVMnJdJsmtXfKStYg1KYH1
j7OJTzF1N3alwjPYnnRyB2sR+Q97ETuGFcVaY6WwF7CvsCLYvdhUeou6x/vC
esQ8TKAcz1P0PN0kbkuH/ba47D1BF/nGYO2U79FnUX0MiXMmk7yvfHMuiD1J
jTLJufZAXnJ+xTn2+0xyrnXKS86+OAObYRvi/It3ZC6bsebYxjjrqD+2BWuB
bYozhwZgW7G7I0/EdxJ3M2wbNoOmU091p7Fe8V1ETojzlPphm9S3xraLa9JQ
bAd2F7ZefC09jW2MMxb7VFyXXsZ2Yd385vNxtlGJWBtxLVoU3w7fYPxj7WrE
WYvlxpwjd2O30ipxOeqtv1VxZ8U+FteiYdincafDPhHXpuFxN4w8gO0Q16ER
2E5sGr0ddxh1J+Oe6FmGBvKcSCd34bgTd4l7JtaMZmOn4qPJS+6RNS7fheNO
PJ7vvuwkb0T+KBZ31rzkfnjD5ftn3EMjv0eefzGdfCNt4uylPuIB6eSci/Pu
ozgX4p3TekN+h42L3J6d7JnYO0V4qmIjec5qWzXeW9yF4q6clZy1se9i/02P
/RV7Oc5yrCxWE5se911q6fGKtldEThTvTv96DU41x2phM+IOTPdgr2ILtX89
K7kfxD3hyrgv8LXNTvZ5jBtnfm1sJl+aWmk7UtsP8S/FrWkpdiLO7ugzfqe2
/6ZLcTZqe4ynOc1Rd5rnTCbJhZETy/D1Exenp8U707/+lFQzvgrYS3GnxUpj
HeM+jQ3B9mJlsE5YeWww9hlWCuuAdcb2Y7fQROwgdhLrZtzb4uyP/03iB2if
+GaawHcg3jP2ReR5ehPbh3XFjotb0FzsDLY1ckSsCS3GjsX9ADsS9zdagh3H
/g9WjdTE
          "]], 
         Polygon3DBox[{{1590, 944, 1154, 2036, 1450, 1451}, {1586, 942, 1020, 
          2007, 1440, 1441}, {1441, 1440, 2008, 1021, 1022, 2009}, {1979, 954,
           808, 807, 1161, 1745}, {1584, 940, 1018, 2005, 1434, 1435}, {2047, 
          1312, 1319, 596, 189, 1519}, {1445, 1444, 2033, 1149, 1150, 2034}, {
          1933, 1306, 831, 832, 1307, 1934}, {1443, 1442, 2031, 1147, 1148, 
          2032}, {1585, 941, 1019, 2006, 1438, 1439}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtlklsV1UUxt//vtEhzuNCoUUxLly5qNSFGkpxqiROLByiKC2VoaCSIIIN
SuK4EGdAE4lThAKaEKrGAkKDbemgiENUQNRocW6ZOuvv85zFzffd886999wz
3Vc2o+HGeSGKoq8ZMaO9iKIz0ygay6NoOoJX+VjJPM74Fpm8pxRFOxhtzJuC
8fVgqnXwCGxmfh7jA8bljFHk3/DpVtbvh08Hh8Fc68AR9n8MfBL5U4xrkZ/G
PrOwYQr8HPg/8HL4SfCCcQT94SSKhsAMeQJuZgyWzNYJyPaVbP9K+IjOc9t1
h5ix1LnusjGY7D1wCBv62bulsO9LXf98ZO/z/UrOXwt/BNmP4AD6veD2wvb/
xffsS4y/nZh+b8n2/Zg9FsNbgvlEugEfVATzyR75Gr2vwHJwYmrnj4P/hR8+
Qz4zNl9dE8xvfzLvQX4vOIpeP/rHwD+YdyO/B3yL+ULkB8AHsXUQHGbtA/Bj
fN8N/xX8FP07wVXM96J/EzgfncM6A74AfkR2wO+HH4V/Dv8d7GLtDPA3Rif8
bvBvfYfXgrfkFpdF4L+cfwg+kFi8dPdG5hsSi5XuPhVZNWMZ8+Mzu7tslq5y
SL5awnwJfCizeCgu6xK750L3v2z/Ht254CHGd/A5sd1jL3xebD7YD58f2532
wRvAhH074F2cczAxnyje5xKXGzw/L3R7lG9b4eMY2xgVueXlYuV8Zrmk/H8o
tzxVbQ1mlg+1yGbl5pOnwbN9f52jurwefhZY5v6Rn2rx/0HFDP13g913rdeP
6uh01VFhsWlH5yjfL0Z+gLPfYL4TvhJcjvyiYHUon09kZPBJwe72ZWQ1XhbM
t4rhBI+X6u8Cr8E25+2M1pLpq79MDla/idf9BK/91zj7HfgKcCajD1ljbjGV
DQ+DVW6D9NUHFPO62PqAbM5T6zHqNYr9mHP1HN1Vd25Wnnl/kI9Ub6q7O3I7
Wzasye37gPeQSr+D7L/U95HftJe4fHVCZrktfyu3FUfFUz5Rb/oisj6lfqVY
/JRbfZXQOVwy+Q/Mn0F+XbC4C1W/yjnViO6muKtetWYosfwZHyyvRrzHyc4n
mF8NfxwcS8021d/rzN9EvhrsIh96PWfK3U7FpdX3+b/2wMv8m+Kyk32izGJX
4XFvY5+TUztL8ZnkNSDfyF/KKeXmLpbeBW5M7K6KV43HVHWtvrQOfgXyYcZW
dHZ5/Ke6TrVz5eQIOtvQ6URnFP6J37HF++qWYLUj3fWJra3xfYaQb0G/g7XT
vLdIr8isT6qPHZdZL1U/rI8tj9SjFLvx4JzCfCGfKD8XeN9QXBo9h1XL9YX1
X521yPvezbm9L+oJ6g1npJZr6tWqfcVc/eZUj90pqfl4O/z22GKufFCebyqs
F/zs74DivjuyO+tOsvWVYP5cqbhm1p/Vt/XmSvfEzOpLNi/zuhnz/eVT+fa2
2PrQoyV7kwb9rVUdKd92KE9TqwHZLNvVJ5UjTYm9g9LfI7syexd6/F+g1d/l
zf7P0Oyxqvae0+T7ZKm9v3oH9R4+G+zcFa47xfWV12vgl6Azu7D3UnnyUrCc
eRl8Idi9XvR7V3lv0fl6RxTXutxqUPXyXDD/P+9nTfPz0sxyu9vfycne3z4M
tsdHYH1uPlGfqCvsXWxTr06sD+hNXxUsJ1d7TVR5rvaj+y3y2eBc1vbF9gZ1
BOsvnf4/pFqVf+4r7D9AtdNQ2DvX7W/6JnSuSu1fTf8oG/ysGvebana59zT1
JtmmvPoP3AZvCQ==
          "]], Polygon3DBox[CompressedData["
1:eJxFlleMV1UQh+///u/du5bY64NSYvBNjVFBX9QYE0WiiY2mAisLrCiIJVFE
iSWxvoCgAkEQhAgqduygC9JkYUFiB2xRsLOC9MXvy5zEh8k9c2bOOXNm5vc7
t1vT6CtH5VmWzUAKZE9DljXUsqwHk+OqLHsUuZTxemz7sD2HPhd9Fz4TGB9d
Zllv9AfR97LB+ejz0e9En4O+D30ta/+oZ9lNjVl2DvqT2FuZG8jcLcwN4jsY
GcW45IyvsXUk/WX2eIC9LmfN8a7lzJmMZyArGL/P9wxkLD4f8G1g/Tes/4f1
oxvjPuOw3YB+M/ok1jyL33RkJeP97NmO/5/YR2JvxH8j+g70Meh7sa9B/x29
Bf1s9AmsXcLcdcw1oHdHvwh5iVgr1n+LbTu2W9N5q9F/RR+O3gP/1/F9DTkZ
//FVxL8Mn2bGU5Gl6Gfi14r/Qey3Cdu/rL8N/XrsW7jPUiTHdi5+U/BfjE8/
z8A+G30WMpHxCtYcgc867J18z0OmYVuE3hf/u/DpkvJ3DeOxSFf0+9B7VpGz
rkX0hLk0pi3oG2sRay/2exr/j9ivP/sV+Hxl/rGPwH4I+g7G25EW9BdS79gf
8/LYz7sucR77ZKSV8cfI1Yx3s77Ed1OKrxNZyf7HsGYla4/j2yeP8w4U0R+f
Yt9KLMOwH1VGjxqDsSywdozryCuMD2Xu7Vr0r/1tjMa6m73uYP1f9ejT1pS/
t/Lop5P4LsyjBtZiM3JtFTU+vYwes/aPI5cxXpVFPqYhz+dRI2tVZ/3+WuT8
bvSD0Tfju5Mzb2evnuw12XwwN4C5KfgsQ/8EuaoKcWzPWI8nqsjHsSk/7+QR
q/31Lt8TmL+Y7xXIiWVgTKxtS1i0Z5sYt2XRy2JoSD16WGyJEeMwHrEjpq27
9RfrYsQ+tB/Fjmd4lv0jfj1fLH9uPvC7pwquub/mAVn2Ies3kPuF9hu2YVX0
phgRKxXrv8uino3pjvaCOfbu/dPZz+TRmwNTrJPy4B6xcEkenHZkGRi2thPz
wHaGfMGnG3pZBqfZG6fmcd5O9I5anOe5c4voZePdxvjhKvb3HLFnvK59yH4r
Ijdib2oe2LXHhtUDny2pX+zlPuk+5mIFtp/T/vaj/u0p/y8WEas9+EMR/KC/
68zlooRtMb4YWY4U6KfIn3JgHuMGexTpW0UvV/J5Q9zPs8XM94y7F2Hbh3Qy
Hk4svfLgwL/rUUNrua0WfPYmMczD7960354yeus3fEc0Rv3tTTHle3MB9lfz
wKf8uL8IvvDNOasMfjLXcoB48Y4dRXCid7effUvkAN8SOVlulq+2FvFm+HaI
UbEqv/k2LMf/R7k65eIz9MF55Fcu7KxFP8j34+VGbIeVwQn2z+Gp3iN95xKe
xJUcLPbtGfHum+l95MHpVXDUaWW8aXKXOembesRciW9jt2Zi/72EZfHg22dO
rUe3InLdXkV+b0zvlxwqdxrz5IQnayOnyq3rq3ifmxPfWF+x6Zu7oAhOlpvl
ZNfbY/aa+Z5fBJ95tznYZ8q9VeCvf3rvV1Vxl37p/RQ/1s4cWFvPbE79LPcd
KONfQww9UgV/i1Px+lj6HxGPvZO+iz2+zIJD5f8L8X0jj3r+Uo9+tvfEhPxs
zazdhiz61Td1aD1y4Ftrzsydb77/Aqur4LYB9f+5T/2pPLjZmlgbcTWb8Zr0
/gxJ/x9diuhlYxAHbakfBiW+tafNXUfKx54i3h85bgw+P1Vxl3mpvmvT/0RT
+r9oS/9P7mmvrasi9qHpbnuryK2cIdeYL/nFN7qFuf8ACu1qsw==
          "]], 
         Polygon3DBox[CompressedData["
1:eJwl0blPVFEYhvEzizMDDRUUNCONnbb+H4SExrAMaAhBsLQgktBIDdhBgQkN
CgVoj6FAgZkBOlwgBBIGEBL2TQy/m1s8yfc+573fmXunodDX2JsMIdTjET5k
QxhIhLCfDqGCa/k53nFT8ilu5R8Y9+AYmlMhdOVCWOUuzL34bVc2E8J/rtbi
OtzbkeJWuGOdlyjr/XO2yFXkp+ZneGVfkTvhurGhl/bsMnckd6LE3ekucX/l
DhS5Wy6hO+i+ab/3MXay8R37Om1ojbruGOY+eoeJZHx/5ErcmbkHP6PvYleL
ud++r3pfsCe/16tx1wvzgt6QnHfXonlOZxZPnN/xN9F3w5azavvWuSvPvcEm
V8V95w7kdixzI3ITvtkzjzzeyrtosGsmHb9j9K7b5gXzZ51PmJTX9C7t6sMf
+3KZ+H87lAtY4UblMs7l1/jFZfQeACeOVE8=
          "]]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVGEAx+FX0zLL7BMorlLHwmqpuZB2tbK0Gsu8VN5Hs7QxtdTykpfc
FYEZiLlukUp7aSOUiIiBREQX+gCCu3pOLn48/3eOnhlmTl59R0UiJYTwXoWp
IUQ7g4eN8+khHHeuYC5reYoJnuMAL3KK1Zzla7XYH9jLv+7z0R63g/uu2y/N
1kOOzot2m51mL9l7B0NI+p9Vu8brf+xBnXF9TTMaUa+m1KFZf3ePjzSkcu8x
wJt6rAlNakzd6tO0GnVf43qmNiXVpGL36OEDteu0cycT6ldcg7qrs649ZJdG
Ne/zVPMNn7PM9WHOOT/lE11Xs0qj71I37BaV2DVs1WWdcK7jJeXb9axUgd3A
KhXat3hFMfs2r6rIvsNr2k3f/41/8y2/8AU/c4yrTHKFy2q2XzHOCV5gH0u5
4DeK+U1O2jN2rp1jD9nZdsz7ZTvnR9+t8y8ec/7JLP7gUX7nEX5jJr9Gzx13
mBF9Rm7L1xa26PZhkz5G2GAa13mAn1L/P17hnRdHUvaf5X8jGFIM
       "]], 
      Line3DBox[CompressedData["
1:eJwt0TdOnFEUgNFHdONNuHSBkcAYcGMovAFWgGhIJvWULICcMTmDhxxNTgZR
kTNmG4CAMxLF0XfvPOn9/8x8yivLKY0JIVTymhDCllbHhlBDmr1W6/hmrtcG
0s2N2kSGuVlbyDS3ahvfze3awW+S7Z3axRdzEt3mHnrpi559CKFfvzob0G77
YPQOHdJhRvjhfFTHGOcPESbIcjapU0yTbZ/RWeaYZ4FFlljmLyusssY6G2yy
RYo7tnWH3ej7ep89/cc+BxySy7Hf79EPmmHOjwvhxP5kz7Sfmn9qgc/PzC/x
ITw7OzcHz3gxXxgLnV9qkRZzZf6l11qiN1qqt1qmd1qu91qh/zXi7ir3pXre
g/1z9LvbPyaGcPT+X78BTbNO1Q==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1348, 1662, 882, 1347, 2050, 1549, 1349, 2051, 1550, 1350, 
       2052, 1551, 1351, 2053, 1552, 1352, 2054, 1553, 1353, 2055, 1956, 2114,
        1354, 2056, 1554, 1355, 2057, 1555, 1356, 2058, 1556, 1357, 2059, 
       1557, 1358, 2021, 2060, 1789, 1558, 1359, 2023, 2061, 1790, 1559, 1360,
        2173, 1664, 1791, 1560, 1665}], 
      Line3DBox[{1362, 1957, 2115, 1361, 895, 1363, 2062, 1561, 1364, 2063, 
       1562, 1365, 2064, 1563, 1366, 2175, 1667, 1792, 1564, 1367, 2178, 1669,
        1793, 1958, 2177, 1368, 1671, 1794, 1959, 2181, 1369, 1673, 1795, 
       2229, 1565, 1370, 1675, 1796, 2230, 1566, 1371, 2024, 2065, 1797, 1567,
        1372, 2022, 2066, 1798, 1568, 1373, 2172, 1663, 1799, 1569, 1374, 
       2174, 1666, 1800, 1570, 1679}], 
      Line3DBox[{1376, 1960, 2116, 1375, 1961, 2117, 1377, 905, 1378, 2067, 
       1571, 1379, 2187, 1681, 1801, 1572, 1380, 2176, 1668, 1803, 1573, 1381,
        2180, 1670, 1805, 1962, 2179, 1382, 1672, 1807, 1963, 2182, 1383, 
       1674, 1809, 1964, 2183, 1384, 1676, 1811, 2231, 1574, 1385, 2025, 2068,
        1813, 1575, 1386, 2184, 1677, 1815, 1576, 1387, 2185, 1678, 1817, 
       1577, 1388, 2186, 1680, 1819, 1578, 1700}], 
      Line3DBox[{1390, 1965, 2118, 1389, 1966, 2119, 1391, 1703, 1704, 2199, 
       1392, 1120, 1706, 1393, 2188, 1682, 1802, 1683, 1394, 2189, 1684, 1804,
        1685, 1395, 2191, 1686, 1806, 1687, 2190, 1396, 1688, 1808, 1689, 
       2192, 1397, 1690, 1810, 1691, 2193, 1398, 1692, 1812, 1693, 2194, 1399,
        2195, 1694, 1814, 1695, 1400, 2196, 1696, 1816, 1697, 1401, 2197, 
       1698, 1818, 1699, 1402, 2198, 1701, 1820, 1702, 1403}], 
      Line3DBox[{1405, 1967, 2120, 1404, 1717, 1718, 2205, 1406, 1705, 1821, 
       2121, 2026, 1407, 2027, 2232, 1822, 1707, 1408, 1124, 1823, 1708, 1409,
        2200, 1709, 1824, 1710, 1410, 2202, 1711, 1825, 1712, 2201, 1411, 
       1713, 1826, 1714, 2203, 1412, 1715, 1827, 1716, 2204, 1413, 1968, 2122,
        1414, 1969, 2123, 1415, 2069, 1579, 1416, 2070, 1580, 1417, 2071, 
       1581, 1418}], 
      Line3DBox[{1420, 1729, 1730, 2209, 1419, 1628, 1719, 2124, 2003, 1421, 
       1629, 1720, 2125, 2004, 1422, 2028, 2233, 1828, 1721, 1423, 2029, 2234,
        1829, 1722, 1424, 1138, 1830, 1723, 1425, 2207, 1724, 1831, 1725, 
       2206, 1426, 1726, 1832, 1727, 2208, 1427, 1728, 1833, 2126, 2030, 1428,
        1970, 2127, 1429, 1971, 2128, 1430, 1972, 2129, 1431, 2072, 1582, 
       1432, 2073, 1583, 1433}], 
      Line3DBox[{1437, 1631, 1740, 2212, 1584, 1435, 1633, 1741, 2213, 1585, 
       1439, 1635, 1742, 2214, 1586, 1441, 2009, 2074, 1743, 1587, 1443, 2032,
        2075, 1744, 1588, 1445, 2034, 2076, 1838, 1589, 1447, 2035, 2077, 
       1839, 943, 1449, 1739, 2078, 1590, 1451, 2079, 1591, 1453, 2080, 1592, 
       1455, 2081, 1593, 1457, 2082, 1594, 1459, 2083, 1595, 1461, 2085, 1597,
        1463}], 
      Line3DBox[{1462, 1596, 2084, 1460, 2138, 1977, 1458, 2137, 1976, 1456, 
       2136, 1975, 1454, 2135, 1974, 1452, 2134, 1973, 1450, 2036, 2133, 1837,
        1738, 1448, 2211, 1737, 1836, 1151, 1446, 1736, 1835, 2236, 2033, 
       1444, 1735, 1834, 2235, 2031, 1442, 1636, 1734, 2210, 2008, 1440, 2007,
        2132, 1733, 1634, 1438, 2006, 2131, 1732, 1632, 1434, 2005, 2130, 
       1731, 1630, 1436}], 
      Line3DBox[{1465, 1637, 1746, 1978, 2165, 1464, 1638, 1747, 2216, 1598, 
       1466, 1639, 1748, 2217, 1599, 1467, 2010, 2086, 1749, 1600, 1468, 2011,
        2087, 1750, 1601, 1848, 2037, 2088, 1840, 1602, 1849, 2238, 1745, 
       1979, 2215, 1469, 955, 1470, 2089, 1603, 1471, 2090, 1604, 1472, 2091, 
       1605, 1473, 2092, 1606, 1474, 2093, 1607, 1475, 2094, 1608, 1476}], 
      Line3DBox[{1478, 1640, 1752, 1980, 2166, 1477, 1641, 1754, 1855, 2167, 
       1856, 1753, 1642, 1755, 2218, 1609, 1850, 2012, 2095, 1756, 1610, 1851,
        2013, 2096, 1757, 1611, 1852, 2239, 1751, 1841, 1612, 1479, 2097, 
       1981, 2139, 1480, 1982, 2140, 1481, 967, 1482, 2098, 1613, 1483, 2099, 
       1614, 1484, 2100, 1615, 1485, 2101, 1616, 1486, 2102, 1617, 1487}], 
      Line3DBox[{1488, 1898, 1643, 1760, 1857, 2168, 2039, 1759, 1644, 1763, 
       1858, 2169, 1859, 1762, 1645, 1766, 1983, 2170, 1765, 2014, 2103, 1768,
        1618, 1853, 2240, 1646, 1770, 1619, 1854, 2241, 1758, 1842, 1620, 
       1489, 2104, 1984, 2141, 1490, 1985, 2142, 1491, 1986, 2143, 1492, 979, 
       1493, 2105, 1621, 1494, 2106, 1622, 1495, 2107, 1623, 1496, 2108, 1624,
        1497}], 
      Line3DBox[{1511, 1627, 2111, 1510, 1626, 2110, 1509, 1625, 2109, 1508, 
       990, 1507, 2146, 1989, 1506, 2145, 1988, 1505, 2144, 1987, 1504, 2250, 
       1934, 1933, 2251, 1503, 1773, 1843, 1772, 2220, 1502, 1655, 1771, 1654,
        2171, 1501, 1653, 1769, 2219, 2015, 1500, 2222, 1652, 1767, 1651, 
       1861, 1499, 2221, 1650, 1764, 1649, 1902, 1860, 1498, 2044, 2246, 1901,
        1648, 1761, 1647, 1923, 1899}], 
      Line3DBox[{1525, 1943, 2113, 1524, 1942, 2112, 1523, 1315, 1522, 2256, 
       2049, 1521, 2255, 2048, 1520, 2254, 2047, 1519, 2148, 1990, 1518, 2247,
        1922, 1935, 1921, 1936, 2252, 1517, 1926, 1779, 1845, 1778, 2224, 
       2041, 1516, 1881, 1777, 1844, 2243, 2038, 1880, 1515, 1864, 1661, 1776,
        2223, 2017, 1514, 2016, 2147, 1775, 1660, 1908, 1863, 1513, 1888, 
       1907, 1659, 1774, 1658, 1905, 1862, 1512, 2225, 1887, 1904, 1657, 1924,
        1656, 1925, 1903, 1900}], 
      Line3DBox[{1784, 1865, 1906, 1866, 1780, 1890, 1917, 1889, 2227, 1526, 
       1867, 1909, 1868, 1781, 1892, 1918, 1891, 1527, 1869, 1870, 1782, 2149,
        2018, 1528, 1944, 2226, 1783, 1872, 1871, 1529, 1882, 1883, 2244, 
       1846, 1911, 1910, 1954}], Line3DBox[{1886, 1873, 1884, 1874, 1948}], 
      Line3DBox[{1950, 1920, 2245, 2045, 1951}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{718, 883, 2050, 719, 895, 744, 2117, 904, 753, 2119, 912, 
       761, 1133, 2205, 919, 772, 2124, 1016, 930, 783, 2131, 1019, 941, 2213,
        794, 1024, 952, 2216, 805, 1031, 1166, 2167, 453, 817, 1038, 1172, 
       2169, 455, 829, 1044, 2221, 1179, 457, 557, 493, 1907, 532, 459, 559, 
       1918, 495, 540, 462, 653}], 
      Line3DBox[{720, 884, 2051, 721, 896, 2062, 745, 905, 754, 1118, 2199, 
       913, 762, 2121, 1119, 920, 773, 2125, 1017, 931, 784, 2132, 1020, 942, 
       2214, 795, 1025, 953, 2217, 806, 1032, 1239, 963, 2218, 818, 1039, 
       1173, 2170, 974, 830, 1045, 2222, 1180, 985, 841, 2147, 1050, 1186, 
       995, 851, 2149, 1053, 1192, 1328}], 
      Line3DBox[{722, 885, 2052, 723, 897, 2063, 746, 906, 2067, 755, 1120, 
       1121, 1217, 2232, 1122, 1123, 1221, 2233, 1134, 1135, 1146, 2210, 1021,
        1022, 2074, 1155, 1026, 1027, 2086, 1162, 1033, 1240, 1034, 2095, 
       1167, 1040, 1174, 1041, 2103, 1175, 2219, 1046, 1181, 1047, 1182, 2223,
        1051, 1187, 1052, 1188, 2226, 1329}], 
      Line3DBox[{724, 886, 2053, 725, 898, 2064, 747, 1098, 2187, 1099, 1210, 
       1100, 2188, 1101, 1218, 1124, 1125, 1222, 2234, 1136, 1137, 1225, 2235,
        1147, 1148, 2075, 1156, 1028, 1029, 2087, 1163, 1035, 1241, 1036, 
       2096, 1168, 1042, 1243, 2240, 1043, 1176, 1048, 2171, 1245, 1049, 1255,
        1233, 1260, 2243, 1183, 1247, 1184, 1261, 1235, 1264, 2244, 1331}], 
      Line3DBox[{726, 887, 2054, 727, 1072, 2175, 1073, 1204, 1074, 2176, 
       1075, 1211, 1102, 2189, 1103, 1219, 1126, 2200, 1127, 1223, 1138, 1139,
        1226, 2236, 1149, 1150, 2076, 1228, 1157, 1237, 1158, 2088, 1230, 
       1164, 1242, 2239, 1165, 1231, 1169, 1244, 2241, 1170, 1232, 1177, 2220,
        1246, 1259, 1258, 1234, 1262, 1263, 2224, 1248, 1284, 1283, 1276, 
       2245, 1289, 1290, 1342}], 
      Line3DBox[{728, 888, 2055, 730, 1076, 2178, 1078, 1205, 1079, 2180, 
       1081, 1212, 1104, 2191, 1106, 1220, 1128, 2202, 1130, 1224, 1140, 2207,
        1142, 1227, 1151, 1153, 2077, 1229, 1159, 1238, 2238, 1161, 807, 964, 
       2097, 819, 975, 2104, 831, 1306, 2251, 1308, 1309, 1310, 2252, 1311, 
       1293, 1292, 852, 1340}], 
      Line3DBox[{732, 890, 2056, 733, 1082, 2181, 900, 749, 1083, 2182, 908, 
       757, 1107, 2192, 915, 764, 1131, 2203, 922, 775, 1143, 2208, 933, 786, 
       2133, 1154, 944, 2078, 797, 955, 809, 2140, 966, 821, 2142, 977, 833, 
       2144, 987, 843, 2148, 997, 854, 1339}], 
      Line3DBox[{734, 891, 2057, 735, 1084, 901, 2229, 750, 1085, 2183, 909, 
       758, 1108, 2193, 916, 765, 1132, 2204, 923, 776, 2126, 1144, 934, 787, 
       2134, 945, 2079, 798, 956, 2089, 810, 967, 822, 2143, 978, 834, 2145, 
       988, 844, 2254, 1312, 1319}], 
      Line3DBox[{736, 892, 2058, 737, 1086, 902, 2230, 751, 1087, 910, 2231, 
       759, 1109, 2194, 917, 766, 2122, 924, 777, 2127, 935, 788, 2135, 946, 
       2080, 799, 957, 2090, 811, 968, 2098, 823, 979, 835, 2146, 989, 845, 
       2255, 1313, 1320}], 
      Line3DBox[{738, 893, 2059, 739, 1088, 1089, 2065, 1206, 1090, 1091, 
       2068, 1213, 1110, 2195, 1111, 767, 2123, 925, 778, 2128, 936, 789, 
       2136, 947, 2081, 800, 958, 2091, 812, 969, 2099, 824, 980, 2105, 836, 
       990, 846, 2256, 1314, 1321}], 
      Line3DBox[{740, 1060, 1061, 2060, 1201, 1062, 1063, 2066, 1207, 1092, 
       2184, 1093, 1214, 1112, 2196, 1113, 768, 926, 2069, 779, 2129, 937, 
       790, 2137, 948, 2082, 801, 959, 2092, 813, 970, 2100, 825, 981, 2106, 
       837, 991, 2109, 847, 1315, 1322}], 
      Line3DBox[{741, 1064, 1065, 2061, 1202, 1066, 2172, 1067, 1208, 1094, 
       2185, 1095, 1215, 1114, 2197, 1115, 769, 927, 2070, 780, 938, 2072, 
       791, 2138, 949, 2083, 802, 960, 2093, 814, 971, 2101, 826, 982, 2107, 
       838, 992, 2110, 848, 1316, 2112, 1323}], 
      Line3DBox[{742, 1068, 2173, 1069, 1203, 1070, 2174, 1071, 1209, 1096, 
       2186, 1097, 1216, 1116, 2198, 1117, 770, 928, 2071, 781, 939, 2073, 
       792, 950, 2084, 2085, 803, 961, 2094, 815, 972, 2102, 827, 983, 2108, 
       839, 993, 2111, 849, 1317, 2113, 1324}], 
      Line3DBox[{1200, 1059, 882, 717, 2115, 894, 743, 2116, 903, 752, 2118, 
       911, 760, 2120, 918, 771, 1145, 2209, 929, 782, 2130, 1018, 940, 2212, 
       793, 1023, 2165, 951, 804, 1030, 2166, 962, 816, 1037, 1171, 2168, 
       1251, 973, 828, 1281, 1282, 2246, 1178, 1252, 984, 840, 1267, 2225, 
       1268, 1185, 1253, 994, 850, 1269, 2227, 1270, 1191, 1254, 998, 861, 
       1346}], Line3DBox[{1341, 853, 996, 2247, 1291, 842, 986, 2250, 1307, 
       832, 976, 2141, 820, 965, 2139, 808, 954, 2215, 1160, 796, 943, 2211, 
       1152, 785, 932, 2206, 1141, 774, 921, 2201, 1129, 763, 914, 2190, 1105,
        756, 907, 2179, 1080, 748, 899, 2177, 1077, 731, 889, 2114, 
       729}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
7HiDsF0cnIkdFCwnyiq60rXwP3x2WvE=
    "]],
  Axes->True,
  AxesLabel->{
    FormBox[
    "\"Relvative Extension \\!\\(\\*FractionBox[\\(x\\), \
SubscriptBox[\\(L\\), \\(0\\)]]\\)\"", TraditionalForm], 
    FormBox[
    "\"Relative z=(\\!\\(\\*FractionBox[\\(x\\), SubscriptBox[\\(L\\), \
\\(0\\)]]\\)-\\!\\(\\*FractionBox[\\(F\\), SubscriptBox[\\(K\\), \
\\(0\\)]]\\))\"", TraditionalForm], 
    FormBox[
    "\"Gradient \\!\\(\\*FractionBox[\\(df\\), SubscriptBox[\\(dL\\), \
\\(0\\)]]\\)(units: \\!\\(\\*FractionBox[\\(\\*SubscriptBox[\\(k\\), \\(b\\)] \
T\\), \\(\\*SubscriptBox[\\(L\\), \\(p\\)] \\*SubscriptBox[\\(L\\), \
\\(0\\)]\\)]\\))\"", TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-100.20759702380708`, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.670509206597622*^9, 3.670509214176695*^9}, 
   3.670592438972137*^9, 3.6706707892976217`*^9, 3.670722109482305*^9, {
   3.67075543587743*^9, 3.670755450604519*^9}, 3.6707554908151073`*^9, 
   3.6709427154149837`*^9, 3.670942930946405*^9, {3.670943224809183*^9, 
   3.670943250094273*^9}, 3.6709493930651913`*^9, 3.676298358645832*^9, {
   3.676311725781384*^9, 3.676311736657042*^9}, 3.676311847859606*^9, {
   3.6763120537749557`*^9, 3.676312065263987*^9}, 3.6769227696652603`*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6763120727456427`*^9}]
},
WindowSize->{808, 652},
WindowMargins->{{Automatic, 108}, {-2, Automatic}},
CellContext->Notebook,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 707, 19, 63, "Input"],
Cell[1268, 41, 1115, 28, 148, "Input"],
Cell[CellGroupData[{
Cell[2408, 73, 916, 27, 35, "Input"],
Cell[3327, 102, 1317, 30, 64, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4681, 137, 234, 5, 28, "Input"],
Cell[4918, 144, 563, 18, 64, "Output"]
}, Open  ]],
Cell[5496, 165, 424, 9, 46, "Input"],
Cell[5923, 176, 537, 13, 28, "Input"],
Cell[CellGroupData[{
Cell[6485, 193, 395, 10, 28, "Input"],
Cell[6883, 205, 968, 19, 49, "Output"]
}, Open  ]],
Cell[7866, 227, 449, 12, 28, "Input"],
Cell[8318, 241, 365, 8, 28, "Input"],
Cell[8686, 251, 664, 17, 35, "Input"],
Cell[CellGroupData[{
Cell[9375, 272, 1049, 20, 56, "Input"],
Cell[10427, 294, 22588, 384, 292, 3820, 76, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[33030, 681, 361, 9, 28, "Input"],
Cell[33394, 692, 1057, 28, 166, "Input"],
Cell[34454, 722, 517, 10, 46, "Input"],
Cell[CellGroupData[{
Cell[34996, 736, 666, 22, 50, "Input"],
Cell[35665, 760, 939, 27, 49, "Output"]
}, Open  ]],
Cell[36619, 790, 533, 14, 80, "Input"],
Cell[37155, 806, 244, 5, 28, "Input"],
Cell[CellGroupData[{
Cell[37424, 815, 387, 8, 28, "Input"],
Cell[37814, 825, 1967, 55, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39818, 885, 316, 7, 28, "Input"],
Cell[40137, 894, 1273, 37, 68, "Output"]
}, Open  ]],
Cell[41425, 934, 382, 10, 35, "Input"],
Cell[CellGroupData[{
Cell[41832, 948, 272, 7, 35, "Input"],
Cell[42107, 957, 369, 9, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42513, 971, 391, 7, 28, "Input"],
Cell[42907, 980, 1476, 37, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44420, 1022, 456, 11, 28, "Input"],
Cell[44879, 1035, 785, 21, 55, "Output"]
}, Open  ]],
Cell[45679, 1059, 258, 6, 28, "Input"],
Cell[45940, 1067, 335, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[46300, 1078, 233, 5, 28, "Input"],
Cell[46536, 1085, 439, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47012, 1100, 1814, 40, 166, "Input"],
Cell[48829, 1142, 23935, 467, 207, "Output"]
}, Open  ]],
Cell[72779, 1612, 327, 7, 63, "Input"],
Cell[73109, 1621, 288, 7, 28, "Input"],
Cell[CellGroupData[{
Cell[73422, 1632, 961, 28, 112, "Input"],
Cell[74386, 1662, 1264, 32, 52, "Output"]
}, Open  ]],
Cell[75665, 1697, 650, 18, 35, "Input"],
Cell[CellGroupData[{
Cell[76340, 1719, 360, 9, 28, "Input"],
Cell[76703, 1730, 1424, 35, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78164, 1770, 316, 8, 28, "Input"],
Cell[78483, 1780, 1249, 32, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79769, 1817, 284, 7, 28, "Input"],
Cell[80056, 1826, 1135, 32, 57, "Output"]
}, Open  ]],
Cell[81206, 1861, 244, 6, 35, "Input"],
Cell[81453, 1869, 354, 9, 28, "Input"],
Cell[CellGroupData[{
Cell[81832, 1882, 183, 3, 28, "Input"],
Cell[82018, 1887, 637, 12, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82692, 1904, 139, 2, 28, "Input"],
Cell[82834, 1908, 705, 11, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83576, 1924, 627, 17, 35, "Input"],
Cell[84206, 1943, 1514, 41, 96, "Output"]
}, Open  ]],
Cell[85735, 1987, 94, 1, 28, "Input"],
Cell[CellGroupData[{
Cell[85854, 1992, 973, 21, 124, "Input"],
Cell[86830, 2015, 125496, 2055, 158, "Output"]
}, Open  ]],
Cell[212341, 4073, 71, 1, 28, "Input"]
}
]
*)

(* End of internal cache information *)
